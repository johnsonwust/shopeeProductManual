C51 COMPILER V9.00   Ò£¿Ø¼ü_ëÏÔÊ¾                                                          11/10/2011 12:29:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE Ò£¿Ø¼ü_ëÏÔÊ¾
OBJECT MODULE PLACED IN Ò£¿Ø¼üÂëÏÔÊ¾.OBJ
COMPILER INVOKED BY: E:\°²×°Èí¼þ\keil-51\C51\BIN\C51.EXE Ò£¿Ø¼üÂëÏÔÊ¾.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          /************************************************************************************
   3                            Òº¾§ÏÔÊ¾Ò£¿Ø¸÷°´¼üµÄ¼üÂëÖµ   Èç¡°IR-CODE:8DH¡±¼´¸Ã¼üµÄ¼üÂëÎª0x8D
   4          *************************************************************************************
   5          ************************************************************************************/
   6          /*Ô¤´¦ÀíÃüÁî*/
   7          #include<reg52.h>    //°üº¬µ¥Æ¬»ú¼Ä´æÆ÷µÄÍ·ÎÄ¼þ
   8          #include<intrins.h> //°üº¬_nop_()º¯Êý¶¨ÒåµÄÍ·ÎÄ¼þ
   9          #define uchar unsigned char
  10          #define uint  unsigned int
  11          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  12          
  13          sbit IRIN=P3^2;         //ºìÍâ½ÓÊÕÆ÷Êý¾ÝÏß
  14          sbit LCD_RS = P0^7;             
  15          sbit LCD_RW = P0^6;
  16          sbit LCD_EN = P0^5;
  17          
  18          
  19          uchar code  cdis1[ ] = {" Red Control "};
  20          uchar code  cdis2[ ] = {"  IR-CODE: --H  "};
  21          uchar IRCOM[7];
  22          /***************ÑÓÊ±º¯Êý*****************************/
  23          void delay(unsigned char x)    //x*0.14MS
  24          {
  25   1              unsigned char i;
  26   1              while(x--)
  27   1              {
  28   2                      for (i = 0; i<13; i++) {}
  29   2              }
  30   1      }
  31          
  32          void delay1(int ms)
  33          {
  34   1              unsigned char y;
  35   1              while(ms--)
  36   1              {
  37   2                      for(y = 0; y<250; y++)
  38   2                      {
  39   3                              _nop_();
  40   3                              _nop_();
  41   3                              _nop_();
  42   3                              _nop_();
  43   3                      }
  44   2              }
  45   1      }
  46          /*******************************************************************/
  47          /*                                                                 */
  48          /*¼ì²éLCDÃ¦×´Ì¬                                                    */
  49          /*lcd_busyÎª1Ê±£¬Ã¦£¬µÈ´ý¡£lcd-busyÎª0Ê±,ÏÐ£¬¿ÉÐ´Ö¸ÁîÓëÊý¾Ý¡£      */
  50          /*                                                                 */
  51          /*******************************************************************/ 
  52          
  53          bit lcd_busy()
  54          {                          
  55   1              bit result;     
C51 COMPILER V9.00   Ò£¿Ø¼ü_ëÏÔÊ¾                                                          11/10/2011 12:29:37 PAGE 2   

  56   1              LCD_RS = 0;
  57   1              LCD_RW = 1;
  58   1              LCD_EN = 1;
  59   1              delayNOP();
  60   1              result = (bit)(P2&0x80);
  61   1              LCD_EN = 0;
  62   1              return(result); 
  63   1      }
  64          
  65          /*******************************************************************/
  66          /*                                                                 */
  67          /*Ð´Ö¸ÁîÊý¾Ýµ½LCD                                                  */
  68          /*RS=L£¬RW=L£¬E=¸ßÂö³å£¬D0-D7=Ö¸ÁîÂë¡£                             */
  69          /*                                                                 */
  70          /*******************************************************************/
  71          
  72          void lcd_wcmd(uchar cmd)
  73          
  74          {                          
  75   1              while(lcd_busy());
  76   1              LCD_RS = 0;
  77   1              LCD_RW = 0;
  78   1              LCD_EN = 0;
  79   1              _nop_();
  80   1              _nop_(); 
  81   1              P2 = cmd;
  82   1              delayNOP();
  83   1              LCD_EN = 1;
  84   1              delayNOP();
  85   1              LCD_EN = 0;  
  86   1      }
  87          
  88          /*******************************************************************/
  89          /*                                                                 */
  90          /*Ð´ÏÔÊ¾Êý¾Ýµ½LCD                                                  */
  91          /*RS=H£¬RW=L£¬E=¸ßÂö³å£¬D0-D7=Êý¾Ý¡£                               */
  92          /*                                                                 */
  93          /*******************************************************************/
  94          
  95          void lcd_wdat(uchar dat)
  96          {                          
  97   1              while(lcd_busy());
  98   1              LCD_RS = 1;
  99   1              LCD_RW = 0;
 100   1              LCD_EN = 0;
 101   1              P2 = dat;
 102   1              delayNOP();
 103   1              LCD_EN = 1;
 104   1              delayNOP();
 105   1              LCD_EN = 0; 
 106   1      }
 107          
 108          /*******************************************************************/
 109          /*                                                                 */
 110          /*  LCD³õÊ¼»¯Éè¶¨                                                  */
 111          /*                                                                 */
 112          /*******************************************************************/
 113          
 114          void lcd_init()
 115          { 
 116   1              delay1(15);                   
 117   1              lcd_wcmd(0x38);      //16*2ÏÔÊ¾£¬5*7µãÕó£¬8Î»Êý¾Ý
C51 COMPILER V9.00   Ò£¿Ø¼ü_ëÏÔÊ¾                                                          11/10/2011 12:29:37 PAGE 3   

 118   1              delay1(5);
 119   1              lcd_wcmd(0x38);         
 120   1              delay1(5);
 121   1              lcd_wcmd(0x38);         
 122   1              delay1(5);
 123   1              
 124   1              lcd_wcmd(0x0c);      //ÏÔÊ¾¿ª£¬¹Ø¹â±ê
 125   1              delay1(5);
 126   1              lcd_wcmd(0x06);      //ÒÆ¶¯¹â±ê
 127   1              delay1(5);
 128   1              lcd_wcmd(0x01);      //Çå³ýLCDµÄÏÔÊ¾ÄÚÈÝ
 129   1              delay1(5);
 130   1      }
 131          
 132          /*******************************************************************/
 133          /*                                                                 */
 134          /*  Éè¶¨ÏÔÊ¾Î»ÖÃ                                                   */
 135          /*                                                                 */
 136          /*******************************************************************/
 137          
 138          void lcd_pos(uchar pos)
 139          {                          
 140   1              lcd_wcmd(pos | 0x80);  //Êý¾ÝÖ¸Õë=80+µØÖ·±äÁ¿
 141   1      }
 142          
 143          /*******************************************************************/
 144          void main()
 145          {
 146   1              uchar m;        
 147   1              IRIN=1;                    //I/O¿Ú³õÊ¼»¯
 148   1              delay1(10);                 //ÑÓÊ±
 149   1              lcd_init();                //³õÊ¼»¯LCD
 150   1              lcd_pos(0);                //ÉèÖÃÏÔÊ¾Î»ÖÃÎªµÚÒ»ÐÐµÄµÚ1¸ö×Ö·û    
 151   1              m=0;
 152   1              while(cdis1[m] != '\0')
 153   1              {                         //ÏÔÊ¾×Ö·û
 154   2                      lcd_wdat(cdis1[m]);
 155   2                      m++;
 156   2              }
 157   1              
 158   1              lcd_pos(0x40);             //ÉèÖÃÏÔÊ¾Î»ÖÃÎªµÚ¶þÐÐµÚ1¸ö×Ö·û
 159   1              m=0;
 160   1              while(cdis2[m] != '\0')
 161   1              {
 162   2                      lcd_wdat(cdis2[m]);      //ÏÔÊ¾×Ö·û
 163   2                      m++;
 164   2              }
 165   1                      
 166   1              IE=0x81;                 //ÔÊÐí×ÜÖÐ¶ÏÖÐ¶Ï,Ê¹ÄÜ INT0 Íâ²¿ÖÐ¶Ï
 167   1              TCON=0x01;               //´¥·¢·½Ê½ÎªÂö³å¸º±ßÑØ´¥·¢
 168   1              
 169   1              while(1);
 170   1      
 171   1      } 
 172          /**********************************************************/
 173          void IR_IN() interrupt 0 using 0
 174          {
 175   1              unsigned char j,k,N=0;
 176   1              EX0 = 0;   
 177   1              delay(15);
 178   1              if (IRIN==1) 
 179   1              { 
C51 COMPILER V9.00   Ò£¿Ø¼ü_ëÏÔÊ¾                                                          11/10/2011 12:29:37 PAGE 4   

 180   2                      EX0 =1;
 181   2                      return;
 182   2              } 
 183   1                         //È·ÈÏIRÐÅºÅ³öÏÖ
 184   1              while (!IRIN)            //µÈIR±äÎª¸ßµçÆ½£¬Ìø¹ý9msµÄÇ°µ¼µÍµçÆ½ÐÅºÅ¡£
 185   1                      delay(1);
 186   1              
 187   1              for (j=0;j<4;j++)         //ÊÕ¼¯ËÄ×éÊý¾Ý
 188   1              { 
 189   2                      for (k=0;k<8;k++)        //Ã¿×éÊý¾ÝÓÐ8Î»
 190   2                      {
 191   3                              while (IRIN)            //µÈ IR ±äÎªµÍµçÆ½£¬Ìø¹ý4.5msµÄÇ°µ¼¸ßµçÆ½ÐÅºÅ¡£
 192   3                              {delay(1);}
 193   3                              while (!IRIN)          //µÈ IR ±äÎª¸ßµçÆ½
 194   3                                      delay(1);
 195   3                              while (IRIN)           //¼ÆËãIR¸ßµçÆ½Ê±³¤
 196   3                              {
 197   4                                      delay(1);
 198   4                                      N++;           
 199   4                                      if (N>=30)
 200   4                                      { 
 201   5                                              EX0=1;
 202   5                                              return;
 203   5                                      }                  //0.14ms¼ÆÊý¹ý³¤×Ô¶¯Àë¿ª¡£
 204   4                              }                        //¸ßµçÆ½¼ÆÊýÍê±Ï                
 205   3                              IRCOM[j]=IRCOM[j] >> 1;     //Êý¾Ý×î¸ßÎ»²¹¡°0¡±
 206   3                              if(N>=8)
 207   3                              {
 208   4                                      IRCOM[j] = IRCOM[j] | 0x80;               //Êý¾Ý×î¸ßÎ»²¹¡°1¡±
 209   4                              }  
 210   3                              N=0;
 211   3                      }
 212   2              }
 213   1              
 214   1              if(IRCOM[2]!=~IRCOM[3])
 215   1              { 
 216   2                      EX0=1;
 217   2                      return; 
 218   2              }
 219   1              
 220   1              IRCOM[5]=IRCOM[2] & 0x0F;     //È¡¼üÂëµÄµÍËÄÎ»
 221   1              IRCOM[6]=IRCOM[2] >> 4;       //ÓÒÒÆ4´Î£¬¸ßËÄÎ»±äÎªµÍËÄÎ»
 222   1              
 223   1              if(IRCOM[5]>9)
 224   1              { 
 225   2                      IRCOM[5]=IRCOM[5]+0x37;
 226   2              }
 227   1              else
 228   1              IRCOM[5]=IRCOM[5]+0x30;
 229   1              
 230   1              if(IRCOM[6]>9)
 231   1              { 
 232   2                      IRCOM[6]=IRCOM[6]+0x37;
 233   2              }
 234   1              else
 235   1              IRCOM[6]=IRCOM[6]+0x30;
 236   1              
 237   1              lcd_pos(0x4b);             
 238   1              lcd_wdat(IRCOM[6]);        //µÚÒ»Î»ÊýÏÔÊ¾ 
 239   1              lcd_pos(0x4c);             
 240   1              lcd_wdat(IRCOM[5]);        //µÚ¶þÎ»ÊýÏÔÊ¾       
 241   1              EX0 = 1; 
C51 COMPILER V9.00   Ò£¿Ø¼ü_ëÏÔÊ¾                                                          11/10/2011 12:29:37 PAGE 5   

 242   1      }
 243          
 244          
 245          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
