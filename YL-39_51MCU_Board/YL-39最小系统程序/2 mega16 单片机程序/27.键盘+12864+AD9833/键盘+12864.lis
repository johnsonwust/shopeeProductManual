                        .module _键盘+12864.c
                        .area data(ram, con, rel)
 0000           _T_1::
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data(ram, con, rel)
 0001                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0001                   .dbsym e T_1 _T_1 c
 0001           _T_2::
 0001                   .blkb 1
                        .area idata
 0001 00                .byte 0
                        .area data(ram, con, rel)
 0002                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0002                   .dbsym e T_2 _T_2 c
 0002           _T_3::
 0002                   .blkb 1
                        .area idata
 0002 00                .byte 0
                        .area data(ram, con, rel)
 0003                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0003                   .dbsym e T_3 _T_3 c
 0003           _T_4::
 0003                   .blkb 1
                        .area idata
 0003 01                .byte 1
                        .area data(ram, con, rel)
 0004                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0004                   .dbsym e T_4 _T_4 c
 0004           _T_5::
 0004                   .blkb 1
                        .area idata
 0004 00                .byte 0
                        .area data(ram, con, rel)
 0005                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0005                   .dbsym e T_5 _T_5 c
 0005           _T_6::
 0005                   .blkb 1
                        .area idata
 0005 00                .byte 0
                        .area data(ram, con, rel)
 0006                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0006                   .dbsym e T_6 _T_6 c
 0006           _T_7::
 0006                   .blkb 1
                        .area idata
 0006 00                .byte 0
                        .area data(ram, con, rel)
 0007                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0007                   .dbsym e T_7 _T_7 c
                        .area lit(rom, con, rel)
 0000           _key_code::
 0000 77B7              .byte 'w,183
 0002 D7E7              .byte 215,231
 0004 7BBB              .byte 123,187
 0006 DBEB              .byte 219,235
 0008 7DBD              .byte 125,189
 000A DDED              .byte 221,237
 000C 7EBE              .byte 126,190
 000E DEEE              .byte 222,238
 0010                   .dbsym e key_code _key_code A[16:16]kc
 0010           _ksp::
 0010 7FBF              .byte 127,191
 0012 DFEF              .byte 223,239
 0014                   .dbsym e ksp _ksp A[4:4]kc
                        .area data(ram, con, rel)
 0007                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0007           _num::
 0007                   .blkb 15
                        .area idata
 0007 303132333435363738395F3A2E5600    .byte 48,49,50,51,52,53,54,55,56,57,95,58,46,'V,0
                        .area data(ram, con, rel)
 0016                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0016                   .dbsym e num _num A[15:15]c
 0016           _welcome::
 0016                   .blkb 10
                        .area idata
 0016 CAE4B3F6B2A8D0CE3A00      .byte 202,228,179,246,178,168,208,206,58,0
                        .area data(ram, con, rel)
 0020                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0020                   .dbsym e welcome _welcome A[10:10]c
 0020           _input::
 0020                   .blkb 10
                        .area idata
 0020 B2A8D0CDB7E5D6B53A00      .byte 178,168,208,205,183,229,214,181,58,0
                        .area data(ram, con, rel)
 002A                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 002A                   .dbsym e input _input A[10:10]c
 002A           _ouput::
 002A                   .blkb 10
                        .area idata
 002A B2A8D0CEC6B5C2CA3A00      .byte 178,168,208,206,198,181,194,202,58,0
                        .area data(ram, con, rel)
 0034                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0034                   .dbsym e ouput _ouput A[10:10]c
 0034           _sin::
 0034                   .blkb 7
                        .area idata
 0034 D5FDCFD2B2A800    .byte 213,253,207,210,178,168,0
                        .area data(ram, con, rel)
 003B                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 003B                   .dbsym e sin _sin A[7:7]c
 003B           _sq1::
 003B                   .blkb 7
                        .area idata
 003B B7BDB2A8202000    .byte 183,189,178,168,32,32,0
                        .area data(ram, con, rel)
 0042                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0042                   .dbsym e sq1 _sq1 A[7:7]c
 0042           _angle::
 0042                   .blkb 7
                        .area idata
 0042 C8FDBDC7B2A800    .byte 200,253,189,199,178,168,0
                        .area data(ram, con, rel)
 0049                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0049                   .dbsym e angle _angle A[7:7]c
 0049           _hz::
 0049                   .blkb 3
                        .area idata
 0049 487A00            .byte 'H,'z,0
                        .area data(ram, con, rel)
 004C                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 004C                   .dbsym e hz _hz A[3:3]c
                        .area code(ram, con, rel)
 0000                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
                        .area lit(rom, con, rel)
 0014           _logo::
 0014 0000              .byte 0,0
 0016 0000              .byte 0,0
 0018 0000              .byte 0,0
 001A 0000              .byte 0,0
 001C 0000              .byte 0,0
 001E 0000              .byte 0,0
 0020 0000              .byte 0,0
 0022 0000              .byte 0,0
 0024 0000              .byte 0,0
 0026 0000              .byte 0,0
 0028 0000              .byte 0,0
 002A 0000              .byte 0,0
 002C 0000              .byte 0,0
 002E 0000              .byte 0,0
 0030 0000              .byte 0,0
 0032 0000              .byte 0,0
 0034 0000              .byte 0,0
 0036 0000              .byte 0,0
 0038 0000              .byte 0,0
 003A 0000              .byte 0,0
 003C 0000              .byte 0,0
 003E 0000              .byte 0,0
 0040 0000              .byte 0,0
 0042 0000              .byte 0,0
 0044 0000              .byte 0,0
 0046 0000              .byte 0,0
 0048 0000              .byte 0,0
 004A 0000              .byte 0,0
 004C 0000              .byte 0,0
 004E 0000              .byte 0,0
 0050 0000              .byte 0,0
 0052 0000              .byte 0,0
 0054 0000              .byte 0,0
 0056 0000              .byte 0,0
 0058 0000              .byte 0,0
 005A 0000              .byte 0,0
 005C 0000              .byte 0,0
 005E 0000              .byte 0,0
 0060 0000              .byte 0,0
 0062 0000              .byte 0,0
 0064 0000              .byte 0,0
 0066 0000              .byte 0,0
 0068 0000              .byte 0,0
 006A 0000              .byte 0,0
 006C 0000              .byte 0,0
 006E 0000              .byte 0,0
 0070 0000              .byte 0,0
 0072 0000              .byte 0,0
 0074 0000              .byte 0,0
 0076 0000              .byte 0,0
 0078 0000              .byte 0,0
 007A 0000              .byte 0,0
 007C 0000              .byte 0,0
 007E 0000              .byte 0,0
 0080 0000              .byte 0,0
 0082 0000              .byte 0,0
 0084 0000              .byte 0,0
 0086 0000              .byte 0,0
 0088 0000              .byte 0,0
 008A 0000              .byte 0,0
 008C 0000              .byte 0,0
 008E 0000              .byte 0,0
 0090 0000              .byte 0,0
 0092 0000              .byte 0,0
 0094 0000              .byte 0,0
 0096 0000              .byte 0,0
 0098 0000              .byte 0,0
 009A 0000              .byte 0,0
 009C 0000              .byte 0,0
 009E 0000              .byte 0,0
 00A0 0000              .byte 0,0
 00A2 0000              .byte 0,0
 00A4 0000              .byte 0,0
 00A6 0000              .byte 0,0
 00A8 0000              .byte 0,0
 00AA 0000              .byte 0,0
 00AC 0000              .byte 0,0
 00AE 0000              .byte 0,0
 00B0 0000              .byte 0,0
 00B2 0000              .byte 0,0
 00B4 0003              .byte 0,3
 00B6 F3E0              .byte 243,224
 00B8 0F8F              .byte 15,143
 00BA FC00              .byte 252,0
 00BC 0000              .byte 0,0
 00BE 0000              .byte 0,0
 00C0 0000              .byte 0,0
 00C2 0000              .byte 0,0
 00C4 0003              .byte 0,3
 00C6 F3F0              .byte 243,240
 00C8 0F8F              .byte 15,143
 00CA FE00              .byte 254,0
 00CC 0000              .byte 0,0
 00CE 0000              .byte 0,0
 00D0 0000              .byte 0,0
 00D2 0000              .byte 0,0
 00D4 0007              .byte 0,7
 00D6 F9F0              .byte 249,240
 00D8 0F9F              .byte 15,159
 00DA FF00              .byte 255,0
 00DC 0000              .byte 0,0
 00DE 0000              .byte 0,0
 00E0 0000              .byte 0,0
 00E2 0000              .byte 0,0
 00E4 0007              .byte 0,7
 00E6 F9F8              .byte 249,248
 00E8 1F9F              .byte 31,159
 00EA FF00              .byte 255,0
 00EC 0000              .byte 0,0
 00EE 0000              .byte 0,0
 00F0 0000              .byte 0,0
 00F2 0000              .byte 0,0
 00F4 0007              .byte 0,7
 00F6 F9F8              .byte 249,248
 00F8 1F1F              .byte 31,31
 00FA FF80              .byte 255,128
 00FC 0000              .byte 0,0
 00FE 0000              .byte 0,0
 0100 0000              .byte 0,0
 0102 0000              .byte 0,0
 0104 000F              .byte 0,15
 0106 FCF8              .byte 252,248
 0108 1F3F              .byte 31,63
 010A 1F80              .byte 31,128
 010C 0000              .byte 0,0
 010E 0003              .byte 0,3
 0110 FFFF              .byte 255,255
 0112 FC00              .byte 252,0
 0114 000F              .byte 0,15
 0116 FCFC              .byte 252,252
 0118 3F3F              .byte 63,63
 011A 1F80              .byte 31,128
 011C 0000              .byte 0,0
 011E 0007              .byte 0,7
 0120 FFFF              .byte 255,255
 0122 FC00              .byte 252,0
 0124 000F              .byte 0,15
 0126 FC7C              .byte 252,124
 0128 3E3E              .byte 62,62
 012A 1F80              .byte 31,128
 012C 0000              .byte 0,0
 012E 0007              .byte 0,7
 0130 FFFF              .byte 255,255
 0132 FC00              .byte 252,0
 0134 001F              .byte 0,31
 0136 FE7C              .byte 254,124
 0138 7E7E              .byte 126,126
 013A 3F00              .byte 63,0
 013C 2000              .byte 32,0
 013E 0001              .byte 0,1
 0140 C000              .byte 192,0
 0142 0000              .byte 0,0
 0144 001F              .byte 0,31
 0146 BE7E              .byte 190,126
 0148 7E7E              .byte 126,126
 014A FF00              .byte 255,0
 014C 7000              .byte 'p,0
 014E 000D              .byte 0,13
 0150 BFDF              .byte 191,223
 0152 B000              .byte 176,0
 0154 001F              .byte 0,31
 0156 3E3E              .byte 62,62
 0158 7C7F              .byte 124,127
 015A FF00              .byte 255,0
 015C 7000              .byte 'p,0
 015E 001D              .byte 0,29
 0160 FFDF              .byte 255,223
 0162 B000              .byte 176,0
 0164 003F              .byte 0,63
 0166 3F3E              .byte 63,62
 0168 7CFF              .byte 124,255
 016A FE00              .byte 254,0
 016C 7000              .byte 'p,0
 016E 001D              .byte 0,29
 0170 FFD8              .byte 255,216
 0172 3000              .byte 48,0
 0174 003F              .byte 0,63
 0176 1F3F              .byte 31,63
 0178 FCFF              .byte 252,255
 017A FC00              .byte 252,0
 017C 6000              .byte 96,0
 017E 003D              .byte 0,61
 0180 F6D8              .byte 246,216
 0182 3000              .byte 48,0
 0184 003F              .byte 0,63
 0186 1F9F              .byte 31,159
 0188 F8FF              .byte 248,255
 018A F000              .byte 240,0
 018C E000              .byte 224,0
 018E 003D              .byte 0,61
 0190 F6DF              .byte 246,223
 0192 B000              .byte 176,0
 0194 003F              .byte 0,63
 0196 FF9F              .byte 255,159
 0198 F9FF              .byte 249,255
 019A E000              .byte 224,0
 019C C000              .byte 192,0
 019E 007D              .byte 0,125
 01A0 F6DF              .byte 246,223
 01A2 B000              .byte 176,0
 01A4 007F              .byte 0,127
 01A6 FF9F              .byte 255,159
 01A8 F9FB              .byte 249,251
 01AA E000              .byte 224,0
 01AC 4000              .byte 64,0
 01AE 00ED              .byte 0,237
 01B0 F6D8              .byte 246,216
 01B2 3000              .byte 48,0
 01B4 007F              .byte 0,127
 01B6 FFCF              .byte 255,207
 01B8 F1F3              .byte 241,243
 01BA F000              .byte 240,0
 01BC 4000              .byte 64,0
 01BE 00ED              .byte 0,237
 01C0 F6D8              .byte 246,216
 01C2 3000              .byte 48,0
 01C4 007F              .byte 0,127
 01C6 FFCF              .byte 255,207
 01C8 F3F3              .byte 243,243
 01CA F000              .byte 240,0
 01CC 4000              .byte 64,0
 01CE 00ED              .byte 0,237
 01D0 F6DF              .byte 246,223
 01D2 B000              .byte 176,0
 01D4 00FF              .byte 0,255
 01D6 FFCF              .byte 255,207
 01D8 F3F1              .byte 243,241
 01DA F000              .byte 240,0
 01DC 6000              .byte 96,0
 01DE 01FF              .byte 1,255
 01E0 FFFF              .byte 255,255
 01E2 FE00              .byte 254,0
 01E4 00F8              .byte 0,248
 01E6 07E7              .byte 7,231
 01E8 E3E1              .byte 227,225
 01EA F008              .byte 240,8
 01EC 201E              .byte 32,30
 01EE 01FF              .byte 1,255
 01F0 FFFF              .byte 255,255
 01F2 FE00              .byte 254,0
 01F4 00F8              .byte 0,248
 01F6 03E7              .byte 3,231
 01F8 E7E1              .byte 231,225
 01FA F8FF              .byte 248,255
 01FC 3C3F              .byte 60,63
 01FE 0000              .byte 0,0
 0200 0000              .byte 0,0
 0202 0000              .byte 0,0
 0204 01F8              .byte 1,248
 0206 03E3              .byte 3,227
 0208 E7E1              .byte 231,225
 020A F9FF              .byte 249,255
 020C FFF7              .byte 255,247
 020E 8000              .byte 128,0
 0210 0000              .byte 0,0
 0212 0000              .byte 0,0
 0214 00F0              .byte 0,240
 0216 01E3              .byte 1,227
 0218 C7C0              .byte 199,192
 021A F9E0              .byte 249,224
 021C FFFF              .byte 255,255
 021E C000              .byte 192,0
 0220 0000              .byte 0,0
 0222 0000              .byte 0,0
 0224 0000              .byte 0,0
 0226 0003              .byte 0,3
 0228 C000              .byte 192,0
 022A 0080              .byte 0,128
 022C 7CFC              .byte 124,252
 022E C000              .byte 192,0
 0230 0000              .byte 0,0
 0232 0000              .byte 0,0
 0234 0000              .byte 0,0
 0236 0001              .byte 0,1
 0238 C000              .byte 192,0
 023A 0000              .byte 0,0
 023C 7FFC              .byte 127,252
 023E F000              .byte 240,0
 0240 0000              .byte 0,0
 0242 0000              .byte 0,0
 0244 0000              .byte 0,0
 0246 0001              .byte 0,1
 0248 8000              .byte 128,0
 024A 0000              .byte 0,0
 024C 7FFF              .byte 127,255
 024E F000              .byte 240,0
 0250 0000              .byte 0,0
 0252 0000              .byte 0,0
 0254 0000              .byte 0,0
 0256 0001              .byte 0,1
 0258 8000              .byte 128,0
 025A 0000              .byte 0,0
 025C 27FF              .byte 39,255
 025E B000              .byte 176,0
 0260 0000              .byte 0,0
 0262 0000              .byte 0,0
 0264 0000              .byte 0,0
 0266 0000              .byte 0,0
 0268 8000              .byte 128,0
 026A 0000              .byte 0,0
 026C 37FF              .byte 55,255
 026E 1000              .byte 16,0
 0270 0000              .byte 0,0
 0272 0000              .byte 0,0
 0274 0000              .byte 0,0
 0276 0000              .byte 0,0
 0278 0000              .byte 0,0
 027A 0000              .byte 0,0
 027C 3FFF              .byte 63,255
 027E 1C00              .byte 28,0
 0280 0000              .byte 0,0
 0282 0000              .byte 0,0
 0284 0000              .byte 0,0
 0286 0000              .byte 0,0
 0288 0000              .byte 0,0
 028A 0000              .byte 0,0
 028C 3FFF              .byte 63,255
 028E 0C00              .byte 12,0
 0290 0000              .byte 0,0
 0292 0000              .byte 0,0
 0294 0000              .byte 0,0
 0296 0000              .byte 0,0
 0298 0000              .byte 0,0
 029A 0000              .byte 0,0
 029C FFFF              .byte 255,255
 029E 0000              .byte 0,0
 02A0 0000              .byte 0,0
 02A2 0000              .byte 0,0
 02A4 0000              .byte 0,0
 02A6 0000              .byte 0,0
 02A8 0000              .byte 0,0
 02AA 0001              .byte 0,1
 02AC FFFF              .byte 255,255
 02AE 0000              .byte 0,0
 02B0 0000              .byte 0,0
 02B2 0000              .byte 0,0
 02B4 0000              .byte 0,0
 02B6 0000              .byte 0,0
 02B8 0000              .byte 0,0
 02BA 0001              .byte 0,1
 02BC DFFF              .byte 223,255
 02BE 0000              .byte 0,0
 02C0 0000              .byte 0,0
 02C2 0000              .byte 0,0
 02C4 0000              .byte 0,0
 02C6 0000              .byte 0,0
 02C8 0000              .byte 0,0
 02CA 0001              .byte 0,1
 02CC 1FFF              .byte 31,255
 02CE 0000              .byte 0,0
 02D0 0000              .byte 0,0
 02D2 0000              .byte 0,0
 02D4 0000              .byte 0,0
 02D6 0000              .byte 0,0
 02D8 0000              .byte 0,0
 02DA 0001              .byte 0,1
 02DC BFFF              .byte 191,255
 02DE 0000              .byte 0,0
 02E0 0000              .byte 0,0
 02E2 0000              .byte 0,0
 02E4 0001              .byte 0,1
 02E6 F83C              .byte 248,60
 02E8 00CC              .byte 0,204
 02EA 0000              .byte 0,0
 02EC FFFE              .byte 255,254
 02EE 0000              .byte 0,0
 02F0 0000              .byte 0,0
 02F2 0000              .byte 0,0
 02F4 001F              .byte 0,31
 02F6 6C37              .byte 'l,55
 02F8 F18C              .byte 241,140
 02FA 0000              .byte 0,0
 02FC E7FE              .byte 231,254
 02FE 0000              .byte 0,0
 0300 0000              .byte 0,0
 0302 0000              .byte 0,0
 0304 0003              .byte 0,3
 0306 606F              .byte 96,'o
 0308 37FF              .byte 55,255
 030A 8000              .byte 128,0
 030C CFFC              .byte 207,252
 030E 0000              .byte 0,0
 0310 0000              .byte 0,0
 0312 0000              .byte 0,0
 0314 001F              .byte 0,31
 0316 FE6C              .byte 254,'l
 0318 3679              .byte 54,'y
 031A 8000              .byte 128,0
 031C EEF0              .byte 238,240
 031E 0000              .byte 0,0
 0320 0000              .byte 0,0
 0322 0000              .byte 0,0
 0324 0003              .byte 0,3
 0326 60EC              .byte 96,236
 0328 3671              .byte 54,'q
 032A 8000              .byte 128,0
 032C 7800              .byte 'x,0
 032E 0000              .byte 0,0
 0330 0000              .byte 0,0
 0332 0000              .byte 0,0
 0334 0003              .byte 0,3
 0336 EC6C              .byte 236,'l
 0338 3679              .byte 54,'y
 033A 8000              .byte 128,0
 033C 3C00              .byte 60,0
 033E 0000              .byte 0,0
 0340 0000              .byte 0,0
 0342 0000              .byte 0,0
 0344 0007              .byte 0,7
 0346 F86C              .byte 248,'l
 0348 37ED              .byte 55,237
 034A 8000              .byte 128,0
 034C 3E00              .byte 62,0
 034E 0000              .byte 0,0
 0350 0000              .byte 0,0
 0352 0000              .byte 0,0
 0354 001F              .byte 0,31
 0356 306C              .byte 48,'l
 0358 366D              .byte 54,'m
 035A 8000              .byte 128,0
 035C 7600              .byte 'v,0
 035E 0000              .byte 0,0
 0360 0000              .byte 0,0
 0362 0000              .byte 0,0
 0364 0003              .byte 0,3
 0366 766C              .byte 'v,'l
 0368 3661              .byte 54,'a
 036A 8000              .byte 128,0
 036C 0600              .byte 6,0
 036E 0000              .byte 0,0
 0370 0000              .byte 0,0
 0372 0000              .byte 0,0
 0374 0003              .byte 0,3
 0376 DE6C              .byte 222,'l
 0378 37E1              .byte 55,225
 037A 8000              .byte 128,0
 037C 0600              .byte 6,0
 037E 0000              .byte 0,0
 0380 0000              .byte 0,0
 0382 0000              .byte 0,0
 0384 000F              .byte 0,15
 0386 0E6C              .byte 14,'l
 0388 F66F              .byte 246,'o
 038A 0000              .byte 0,0
 038C 0600              .byte 6,0
 038E 0000              .byte 0,0
 0390 0000              .byte 0,0
 0392 0000              .byte 0,0
 0394 0000              .byte 0,0
 0396 0000              .byte 0,0
 0398 0000              .byte 0,0
 039A 0000              .byte 0,0
 039C 0000              .byte 0,0
 039E 0000              .byte 0,0
 03A0 0000              .byte 0,0
 03A2 0000              .byte 0,0
 03A4 0000              .byte 0,0
 03A6 0000              .byte 0,0
 03A8 0000              .byte 0,0
 03AA 0000              .byte 0,0
 03AC 0000              .byte 0,0
 03AE 0000              .byte 0,0
 03B0 0000              .byte 0,0
 03B2 0000              .byte 0,0
 03B4 0000              .byte 0,0
 03B6 0000              .byte 0,0
 03B8 0000              .byte 0,0
 03BA 0000              .byte 0,0
 03BC 0000              .byte 0,0
 03BE 0000              .byte 0,0
 03C0 0000              .byte 0,0
 03C2 0000              .byte 0,0
 03C4 0000              .byte 0,0
 03C6 0000              .byte 0,0
 03C8 0000              .byte 0,0
 03CA 0000              .byte 0,0
 03CC 0000              .byte 0,0
 03CE 0000              .byte 0,0
 03D0 0000              .byte 0,0
 03D2 0000              .byte 0,0
 03D4 0000              .byte 0,0
 03D6 0000              .byte 0,0
 03D8 0000              .byte 0,0
 03DA 0000              .byte 0,0
 03DC 0000              .byte 0,0
 03DE 0000              .byte 0,0
 03E0 0000              .byte 0,0
 03E2 0000              .byte 0,0
 03E4 0000              .byte 0,0
 03E6 0000              .byte 0,0
 03E8 0000              .byte 0,0
 03EA 0000              .byte 0,0
 03EC 0000              .byte 0,0
 03EE 0000              .byte 0,0
 03F0 0000              .byte 0,0
 03F2 0000              .byte 0,0
 03F4 0000              .byte 0,0
 03F6 0000              .byte 0,0
 03F8 0000              .byte 0,0
 03FA 0000              .byte 0,0
 03FC 0000              .byte 0,0
 03FE 0000              .byte 0,0
 0400 0000              .byte 0,0
 0402 0000              .byte 0,0
 0404 0000              .byte 0,0
 0406 0000              .byte 0,0
 0408 0000              .byte 0,0
 040A 0000              .byte 0,0
 040C 0000              .byte 0,0
 040E 0000              .byte 0,0
 0410 0000              .byte 0,0
 0412 0000              .byte 0,0
 0414 0000              .byte 0,0
 0416 0000              .byte 0,0
 0418 0000              .byte 0,0
 041A 0000              .byte 0,0
 041C 0000              .byte 0,0
 041E 0000              .byte 0,0
 0420 0000              .byte 0,0
 0422 0000              .byte 0,0
 0424 0000              .byte 0,0
 0426 0000              .byte 0,0
 0428 0000              .byte 0,0
 042A 0000              .byte 0,0
 042C 0000              .byte 0,0
 042E 0000              .byte 0,0
 0430 0000              .byte 0,0
 0432 0000              .byte 0,0
 0434 0000              .byte 0,0
 0436 0000              .byte 0,0
 0438 0000              .byte 0,0
 043A 0000              .byte 0,0
 043C 0000              .byte 0,0
 043E 0000              .byte 0,0
 0440 0000              .byte 0,0
 0442 0000              .byte 0,0
 0444                   .dbsym e logo _logo A[1072:1072]kc
                        .area text(rom, con, rel)
 0000                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 0000                   .dbfunc e Lcd_init _Lcd_init fV
                        .even
 0000           _Lcd_init::
 0000                   .dbline -1
 0000                   .dbline 119
 0000           ; /******************************************************************************/
 0000           ; /*【编写时间】： 2011.07.07
 0000           ; * 【作    者】： 雁翎电子
 0000           ; * 【版    本】： V1.0
 0000           ; * 【网    站】： http://ylelectronic.taobao.com/ 
 0000           ; * 【Q      Q】： 348439350
 0000           ; * 【编译环境】： ICCAVR  
 0000           ; * 【函数功能】：LCD12864(St7920/St7921)+AD9833+4*4键盘
 0000           ; * 【晶    振】:  8M           
 0000           ; * 【芯    片】:  ATMEGA16A     
 0000           ; * 【硬件连接】： J1短路帽接上    
 0000           ; /******************************************************************************/
 0000           ; /******************************************************************************/
 0000           ; /*硬体接口
 0000           ; /*PB接键盘
 0000           ; /*PD0-----------------------FSYNC---------------------------244 A0--------------
 0000           ; /*PD1-----------------------SCLK----------------------------244 A1--------------
 0000           ; /*PD2-----------------------SDATA---------------------------244 A2--------------
 0000           ; /******************************************************************************/
 0000           ; #include <iom16v.h>
 0000           ; #include <macros.h>
 0000           ; #define Set_Bit(val, bitn)    (val |=(1<<(bitn))) 
 0000           ; #define Clr_Bit(val, bitn)    (val&=~(1<<(bitn))) 
 0000           ; //12864
 0000           ; void Write_char(unsigned char start, unsigned char ddata);
 0000           ; void Send_byte(unsigned char bbyte);
 0000           ; void Delaynms(unsigned int di);
 0000           ; void Lcd_init(void);
 0000           ; void Disp_img(unsigned char const *img);
 0000           ; unsigned char T_1=0,T_2=0,T_3=0,T_4=1,T_5=0,T_6=0,T_7=0;
 0000           ; unsigned char  const key_code[]={0x77,0XB7,0XD7,0XE7,0X7B,0XBB,0XDB,0XEB,
 0000           ;                                  0X7D,0XBD,0XDD,0XED,0X7E,0XBE,0XDE,0XEE};
 0000           ; unsigned char  const ksp[4]=    {0x7F,0xBF,0xDF,0xEF};
 0000           ; unsigned char  num[]=    {"0123456789_:.V"};
 0000           ; unsigned char  welcome[]= {"输出波形:"};
 0000           ; unsigned char  input[]  = {"波型峰值:"};
 0000           ; unsigned char  ouput[]  = {"波形频率:"};
 0000           ; unsigned char  sin[]    = {"正弦波"    };
 0000           ; unsigned char  sq1[]    = {"方波  "};
 0000           ; unsigned char  angle[]  = {"三角波"};
 0000           ; unsigned char  hz[]     = {"Hz"};
 0000           ; #pragma data:code
 0000           ; /**************************************************************/
 0000           ;  unsigned  char const logo[]={  
 0000           ; /*--  调入了一幅图像：C:\Documents and Settings\lwd\桌面\AVR程序\AVR_12864_串行\b01.bmp  --*/
 0000           ; /*--  宽度x高度=127x63  --*/
 0000           ; /*--  宽度不是8的倍数，现调整为：宽度x高度=128x63  --*/
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0xF3,0xE0,0x0F,0x8F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0xF3,0xF0,0x0F,0x8F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x07,0xF9,0xF0,0x0F,0x9F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x07,0xF9,0xF8,0x1F,0x9F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x07,0xF9,0xF8,0x1F,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x0F,0xFC,0xF8,0x1F,0x3F,0x1F,0x80,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFC,0x00,
 0000           ; 0x00,0x0F,0xFC,0xFC,0x3F,0x3F,0x1F,0x80,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x00,
 0000           ; 0x00,0x0F,0xFC,0x7C,0x3E,0x3E,0x1F,0x80,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x00,
 0000           ; 0x00,0x1F,0xFE,0x7C,0x7E,0x7E,0x3F,0x00,0x20,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,
 0000           ; 0x00,0x1F,0xBE,0x7E,0x7E,0x7E,0xFF,0x00,0x70,0x00,0x00,0x0D,0xBF,0xDF,0xB0,0x00,
 0000           ; 0x00,0x1F,0x3E,0x3E,0x7C,0x7F,0xFF,0x00,0x70,0x00,0x00,0x1D,0xFF,0xDF,0xB0,0x00,
 0000           ; 0x00,0x3F,0x3F,0x3E,0x7C,0xFF,0xFE,0x00,0x70,0x00,0x00,0x1D,0xFF,0xD8,0x30,0x00,
 0000           ; 0x00,0x3F,0x1F,0x3F,0xFC,0xFF,0xFC,0x00,0x60,0x00,0x00,0x3D,0xF6,0xD8,0x30,0x00,
 0000           ; 0x00,0x3F,0x1F,0x9F,0xF8,0xFF,0xF0,0x00,0xE0,0x00,0x00,0x3D,0xF6,0xDF,0xB0,0x00,
 0000           ; 0x00,0x3F,0xFF,0x9F,0xF9,0xFF,0xE0,0x00,0xC0,0x00,0x00,0x7D,0xF6,0xDF,0xB0,0x00,
 0000           ; 0x00,0x7F,0xFF,0x9F,0xF9,0xFB,0xE0,0x00,0x40,0x00,0x00,0xED,0xF6,0xD8,0x30,0x00,
 0000           ; 0x00,0x7F,0xFF,0xCF,0xF1,0xF3,0xF0,0x00,0x40,0x00,0x00,0xED,0xF6,0xD8,0x30,0x00,
 0000           ; 0x00,0x7F,0xFF,0xCF,0xF3,0xF3,0xF0,0x00,0x40,0x00,0x00,0xED,0xF6,0xDF,0xB0,0x00,
 0000           ; 0x00,0xFF,0xFF,0xCF,0xF3,0xF1,0xF0,0x00,0x60,0x00,0x01,0xFF,0xFF,0xFF,0xFE,0x00,
 0000           ; 0x00,0xF8,0x07,0xE7,0xE3,0xE1,0xF0,0x08,0x20,0x1E,0x01,0xFF,0xFF,0xFF,0xFE,0x00,
 0000           ; 0x00,0xF8,0x03,0xE7,0xE7,0xE1,0xF8,0xFF,0x3C,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x01,0xF8,0x03,0xE3,0xE7,0xE1,0xF9,0xFF,0xFF,0xF7,0x80,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0xF0,0x01,0xE3,0xC7,0xC0,0xF9,0xE0,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x03,0xC0,0x00,0x00,0x80,0x7C,0xFC,0xC0,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,0x7F,0xFC,0xF0,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x27,0xFF,0xB0,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x37,0xFF,0x10,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x1C,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x0C,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xDF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xBF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x01,0xF8,0x3C,0x00,0xCC,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x1F,0x6C,0x37,0xF1,0x8C,0x00,0x00,0xE7,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0x60,0x6F,0x37,0xFF,0x80,0x00,0xCF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x1F,0xFE,0x6C,0x36,0x79,0x80,0x00,0xEE,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0x60,0xEC,0x36,0x71,0x80,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0xEC,0x6C,0x36,0x79,0x80,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x07,0xF8,0x6C,0x37,0xED,0x80,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x1F,0x30,0x6C,0x36,0x6D,0x80,0x00,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0x76,0x6C,0x36,0x61,0x80,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x03,0xDE,0x6C,0x37,0xE1,0x80,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x0F,0x0E,0x6C,0xF6,0x6F,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0000           ; };
 0000           ; 
 0000           ; /******************************************************************************/
 0000           ; void Lcd_init(void)   //初始化LCD 
 0000           ; {
 0000                   .dbline 120
 0000           ;       Delaynms(10); //启动等待，等LCM讲入工作状态
 0000 0AE0              ldi R16,10
 0002 10E0              ldi R17,0
 0004 4BD0              xcall _Delaynms
 0006                   .dbline 121
 0006           ;       Set_Bit(PORTA,0);
 0006 D89A              sbi 0x1b,0
 0008                   .dbline 122
 0008           ;       Write_char(0,0x30);  //8 位介面，基本指令集
 0008 20E3              ldi R18,48
 000A 0027              clr R16
 000C 10D0              xcall _Write_char
 000E                   .dbline 123
 000E           ;       Delaynms(10);
 000E 0AE0              ldi R16,10
 0010 10E0              ldi R17,0
 0012 44D0              xcall _Delaynms
 0014                   .dbline 124
 0014           ;       Write_char(0,0x0c);  //显示打开，光标关，反白关
 0014 2CE0              ldi R18,12
 0016 0027              clr R16
 0018 0AD0              xcall _Write_char
 001A                   .dbline 125
 001A           ;       Delaynms(10);
 001A 0AE0              ldi R16,10
 001C 10E0              ldi R17,0
 001E 3ED0              xcall _Delaynms
 0020                   .dbline 126
 0020           ;       Write_char(0,0x01);  //清屏，将DDRAM的地址计数器归零  
 0020 21E0              ldi R18,1
 0022 0027              clr R16
 0024 04D0              xcall _Write_char
 0026                   .dbline 127
 0026           ;       Delaynms(10);
 0026 0AE0              ldi R16,10
 0028 10E0              ldi R17,0
 002A 38D0              xcall _Delaynms
 002C                   .dbline -2
 002C           L1:
 002C                   .dbline 0 ; func end
 002C 0895              ret
 002E                   .dbend
 002E                   .dbfunc e Write_char _Write_char fV
 002E           ;          Ldata -> R20
 002E           ;          Hdata -> R22
 002E           ;     start_data -> R10
 002E           ;          ddata -> R20
 002E           ;          start -> R22
                        .even
 002E           _Write_char::
 002E 0E940000          xcall push_gset3
 0032 422F              mov R20,R18
 0034 602F              mov R22,R16
 0036                   .dbline -1
 0036                   .dbline 132
 0036           ; }
 0036           ; 
 0036           ; /******************************************************************************/
 0036           ; void Write_char(unsigned char start, unsigned char ddata) //写指令或数据
 0036           ; {
 0036                   .dbline 134
 0036           ;       unsigned char start_data,Hdata,Ldata;
 0036           ;       if(start==0) 
 0036 6623              tst R22
 0038 19F4              brne L3
 003A                   .dbline 135
 003A           ;               start_data=0xf8;         //写指令
 003A 88EF              ldi R24,248
 003C A82E              mov R10,R24
 003E 02C0              xjmp L4
 0040           L3:
 0040                   .dbline 137
 0040           ;     else    
 0040           ;       start_data=0xfa;  //写数据
 0040 8AEF              ldi R24,250
 0042 A82E              mov R10,R24
 0044           L4:
 0044                   .dbline 139
 0044           ;   
 0044           ;       Hdata=ddata&0xf0;                 //取高四位
 0044 642F              mov R22,R20
 0046 607F              andi R22,240
 0048                   .dbline 140
 0048           ;       Ldata=(ddata<<4)&0xf0;  //取低四位
 0048 842F              mov R24,R20
 004A 8F70              andi R24,#0x0F
 004C 8295              swap R24
 004E 807F              andi R24,240
 0050 482F              mov R20,R24
 0052                   .dbline 141
 0052           ;       Send_byte(start_data);    //发送起始信号
 0052 0A2D              mov R16,R10
 0054 10D0              xcall _Send_byte
 0056                   .dbline 142
 0056           ;       Delaynms(10); //延时是必须的
 0056 0AE0              ldi R16,10
 0058 10E0              ldi R17,0
 005A 20D0              xcall _Delaynms
 005C                   .dbline 143
 005C           ;       Send_byte(Hdata);             //发送高四位
 005C 062F              mov R16,R22
 005E 0BD0              xcall _Send_byte
 0060                   .dbline 144
 0060           ;       Delaynms(10);  //延时是必须的
 0060 0AE0              ldi R16,10
 0062 10E0              ldi R17,0
 0064 1BD0              xcall _Delaynms
 0066                   .dbline 145
 0066           ;       Send_byte(Ldata);                 //发送低四位
 0066 042F              mov R16,R20
 0068 06D0              xcall _Send_byte
 006A                   .dbline 146
 006A           ;       Delaynms(10);  //延时是必须的
 006A 0AE0              ldi R16,10
 006C 10E0              ldi R17,0
 006E 16D0              xcall _Delaynms
 0070                   .dbline -2
 0070           L2:
 0070 0E940000          xcall pop_gset3
 0074                   .dbline 0 ; func end
 0074 0895              ret
 0076                   .dbsym r Ldata 20 c
 0076                   .dbsym r Hdata 22 c
 0076                   .dbsym r start_data 10 c
 0076                   .dbsym r ddata 20 c
 0076                   .dbsym r start 22 c
 0076                   .dbend
 0076                   .dbfunc e Send_byte _Send_byte fV
 0076           ;              j -> R20
 0076           ;              i -> R22
 0076           ;          bbyte -> R16
                        .even
 0076           _Send_byte::
 0076 0E940000          xcall push_gset2
 007A                   .dbline -1
 007A                   .dbline 151
 007A           ; }
 007A           ; 
 007A           ; /******************************************************************************/
 007A           ; void Send_byte(unsigned char bbyte) //发送一个字节
 007A           ; {
 007A                   .dbline 153
 007A           ;       unsigned char i,j;
 007A           ;       for(i=0;i<8;i++)
 007A 6627              clr R22
 007C 0AC0              xjmp L9
 007E           L6:
 007E                   .dbline 154
 007E           ;       {    
 007E                   .dbline 156
 007E           ;           
 007E           ;               j=bbyte&0x80; //取出最高位
 007E 402F              mov R20,R16
 0080 4078              andi R20,128
 0082                   .dbline 157
 0082           ;               if(j)
 0082 11F0              breq L10
 0084                   .dbline 158
 0084           ;                       Set_Bit(PORTA,1);  //液晶发送数据 1
 0084 D99A              sbi 0x1b,1
 0086 01C0              xjmp L11
 0088           L10:
 0088                   .dbline 160
 0088           ;               else
 0088           ;                       Clr_Bit(PORTA,1);  //液晶发送数据 0
 0088 D998              cbi 0x1b,1
 008A           L11:
 008A                   .dbline 161
 008A DA9A              sbi 0x1b,2
 008C                   .dbline 162
 008C DA98              cbi 0x1b,2
 008E                   .dbline 163
 008E 000F              lsl R16
 0090                   .dbline 164
 0090           L7:
 0090                   .dbline 153
 0090 6395              inc R22
 0092           L9:
 0092                   .dbline 153
 0092 6830              cpi R22,8
 0094 A0F3              brlo L6
 0096                   .dbline -2
 0096           L5:
 0096 0E940000          xcall pop_gset2
 009A                   .dbline 0 ; func end
 009A 0895              ret
 009C                   .dbsym r j 20 c
 009C                   .dbsym r i 22 c
 009C                   .dbsym r bbyte 16 c
 009C                   .dbend
 009C                   .dbfunc e Delaynms _Delaynms fV
 009C           ;             da -> R20,R21
 009C           ;             db -> R22,R23
 009C           ;             di -> R16,R17
                        .even
 009C           _Delaynms::
 009C 0E940000          xcall push_gset2
 00A0                   .dbline -1
 00A0                   .dbline 169
 00A0           ;               Set_Bit(PORTA,2);      //液晶同步脉冲
 00A0           ;               Clr_Bit(PORTA,2);      //液晶同步脉冲
 00A0           ;               bbyte<<=1;   //左移
 00A0           ;       }  
 00A0           ; }
 00A0           ; 
 00A0           ; /******************************************************************************/
 00A0           ; void Delaynms(unsigned int di) //延时
 00A0           ; {
 00A0                   .dbline 171
 00A0           ;       unsigned int da,db;
 00A0           ;       for(da=0;da<di;da++)
 00A0 4427              clr R20
 00A2 5527              clr R21
 00A4 0BC0              xjmp L16
 00A6           L13:
 00A6                   .dbline 172
 00A6 6627              clr R22
 00A8 7727              clr R23
 00AA 02C0              xjmp L20
 00AC           L17:
 00AC                   .dbline 172
 00AC           L18:
 00AC                   .dbline 172
 00AC 6F5F              subi R22,255  ; offset = 1
 00AE 7F4F              sbci R23,255
 00B0           L20:
 00B0                   .dbline 172
 00B0 6A30              cpi R22,10
 00B2 E0E0              ldi R30,0
 00B4 7E07              cpc R23,R30
 00B6 D0F3              brlo L17
 00B8           L14:
 00B8                   .dbline 171
 00B8 4F5F              subi R20,255  ; offset = 1
 00BA 5F4F              sbci R21,255
 00BC           L16:
 00BC                   .dbline 171
 00BC 4017              cp R20,R16
 00BE 5107              cpc R21,R17
 00C0 90F3              brlo L13
 00C2                   .dbline -2
 00C2           L12:
 00C2 0E940000          xcall pop_gset2
 00C6                   .dbline 0 ; func end
 00C6 0895              ret
 00C8                   .dbsym r da 20 i
 00C8                   .dbsym r db 22 i
 00C8                   .dbsym r di 16 i
 00C8                   .dbend
 00C8                   .dbfunc e Disp_img _Disp_img fV
 00C8           ;              i -> R20
 00C8           ;              k -> R22,R23
 00C8           ;              j -> R10
 00C8           ;            img -> R12,R13
                        .even
 00C8           _Disp_img::
 00C8 0E940000          xcall push_gset4
 00CC 6801              movw R12,R16
 00CE                   .dbline -1
 00CE                   .dbline 177
 00CE           ;               for(db=0;db<10;db++);
 00CE           ; }
 00CE           ; 
 00CE           ; /****************************************************************************/
 00CE           ; void Disp_img(unsigned char const *img )      //图形方式12864显示字模221 横向取膜
 00CE           ; { 
 00CE                   .dbline 179
 00CE           ;       unsigned char i,j;
 00CE           ;       unsigned int k = 0;
 00CE 6627              clr R22
 00D0 7727              clr R23
 00D2                   .dbline 180
 00D2           ;     Delaynms(100);//延时好重要!!!!!!AVR太快了
 00D2 04E6              ldi R16,100
 00D4 10E0              ldi R17,0
 00D6 E2DF              xcall _Delaynms
 00D8                   .dbline 181
 00D8           ;       Write_char(0,0x36); //图形方式
 00D8 26E3              ldi R18,54
 00DA 0027              clr R16
 00DC A8DF              xcall _Write_char
 00DE                   .dbline 182
 00DE           ;       Delaynms(100);//延时好重要!!!!!!AVR太快了
 00DE 04E6              ldi R16,100
 00E0 10E0              ldi R17,0
 00E2 DCDF              xcall _Delaynms
 00E4                   .dbline 183
 00E4           ;       for(i=0;i<32;i++)
 00E4 4427              clr R20
 00E6 17C0              xjmp L25
 00E8           L22:
 00E8                   .dbline 184
 00E8           ;       { 
 00E8                   .dbline 185
 00E8           ;               Write_char(0,0x80+i); //列
 00E8 242F              mov R18,R20
 00EA 2058              subi R18,128    ; addi 128
 00EC 0027              clr R16
 00EE 9FDF              xcall _Write_char
 00F0                   .dbline 186
 00F0           ;               Write_char(0,0x80);       //行
 00F0 20E8              ldi R18,128
 00F2 0027              clr R16
 00F4 9CDF              xcall _Write_char
 00F6                   .dbline 187
 00F6           ;       for(j=0;j<16;j++) 
 00F6 AA24              clr R10
 00F8 0AC0              xjmp L29
 00FA           L26:
 00FA                   .dbline 188
 00FA                   .dbline 189
 00FA 1B01              movw R2,R22
 00FC 6F5F              subi R22,255  ; offset = 1
 00FE 7F4F              sbci R23,255
 0100 F101              movw R30,R2
 0102 EC0D              add R30,R12
 0104 FD1D              adc R31,R13
 0106 2491              lpm R18,Z
 0108 01E0              ldi R16,1
 010A 91DF              xcall _Write_char
 010C                   .dbline 190
 010C           L27:
 010C                   .dbline 187
 010C A394              inc R10
 010E           L29:
 010E                   .dbline 187
 010E 8A2D              mov R24,R10
 0110 8031              cpi R24,16
 0112 98F3              brlo L26
 0114                   .dbline 191
 0114           L23:
 0114                   .dbline 183
 0114 4395              inc R20
 0116           L25:
 0116                   .dbline 183
 0116 4032              cpi R20,32
 0118 38F3              brlo L22
 011A                   .dbline 193
 011A           ;               {
 011A           ;                       Write_char(1,img[k++]); 
 011A           ;               }
 011A           ;       }
 011A           ; 
 011A           ;       for(i=0;i<32;i++)
 011A 4427              clr R20
 011C 17C0              xjmp L33
 011E           L30:
 011E                   .dbline 194
 011E           ;       { 
 011E                   .dbline 195
 011E           ;               Write_char(0,0x80+i);
 011E 242F              mov R18,R20
 0120 2058              subi R18,128    ; addi 128
 0122 0027              clr R16
 0124 84DF              xcall _Write_char
 0126                   .dbline 196
 0126           ;               Write_char(0,0x88);
 0126 28E8              ldi R18,136
 0128 0027              clr R16
 012A 81DF              xcall _Write_char
 012C                   .dbline 197
 012C           ;       for(j=0;j<16;j++) 
 012C AA24              clr R10
 012E 0AC0              xjmp L37
 0130           L34:
 0130                   .dbline 198
 0130                   .dbline 199
 0130 1B01              movw R2,R22
 0132 6F5F              subi R22,255  ; offset = 1
 0134 7F4F              sbci R23,255
 0136 F101              movw R30,R2
 0138 EC0D              add R30,R12
 013A FD1D              adc R31,R13
 013C 2491              lpm R18,Z
 013E 01E0              ldi R16,1
 0140 76DF              xcall _Write_char
 0142                   .dbline 200
 0142           L35:
 0142                   .dbline 197
 0142 A394              inc R10
 0144           L37:
 0144                   .dbline 197
 0144 8A2D              mov R24,R10
 0146 8031              cpi R24,16
 0148 98F3              brlo L34
 014A                   .dbline 201
 014A           L31:
 014A                   .dbline 193
 014A 4395              inc R20
 014C           L33:
 014C                   .dbline 193
 014C 4032              cpi R20,32
 014E 38F3              brlo L30
 0150                   .dbline -2
 0150           L21:
 0150 0E940000          xcall pop_gset4
 0154                   .dbline 0 ; func end
 0154 0895              ret
 0156                   .dbsym r i 20 c
 0156                   .dbsym r k 22 i
 0156                   .dbsym r j 10 c
 0156                   .dbsym r img 12 pkc
 0156                   .dbend
 0156                   .dbfunc e Clr_Scr _Clr_Scr fV
                        .even
 0156           _Clr_Scr::
 0156                   .dbline -1
 0156                   .dbline 206
 0156           ;               {
 0156           ;                       Write_char(1,img[k++]);
 0156           ;               }
 0156           ;       }
 0156           ; }
 0156           ; 
 0156           ; /******************************************************************************/
 0156           ; void Clr_Scr(void)//清屏函数
 0156           ; {
 0156                   .dbline 207
 0156           ;       Write_char(0,0x01);
 0156 21E0              ldi R18,1
 0158 0027              clr R16
 015A 69DF              xcall _Write_char
 015C                   .dbline -2
 015C           L38:
 015C                   .dbline 0 ; func end
 015C 0895              ret
 015E                   .dbend
 015E                   .dbfunc e LCD_set_xy _LCD_set_xy fV
 015E           ;        address -> R20
 015E           ;              y -> R22
 015E           ;              x -> R20
                        .even
 015E           _LCD_set_xy::
 015E 0E940000          xcall push_gset2
 0162 622F              mov R22,R18
 0164 402F              mov R20,R16
 0166                   .dbline -1
 0166                   .dbline 211
 0166           ; }
 0166           ; /******************************************************************************/
 0166           ; void LCD_set_xy( unsigned char x, unsigned char y )
 0166           ; {     //设置LCD显示的起始位置，X为行，Y为列
 0166                   .dbline 213
 0166           ;     unsigned char address;
 0166           ;       switch(x)
 0166 5527              clr R21
 0168 4030              cpi R20,0
 016A 4507              cpc R20,R21
 016C 89F0              breq L43
 016E           X0:
 016E 4130              cpi R20,1
 0170 E0E0              ldi R30,0
 0172 5E07              cpc R21,R30
 0174 81F0              breq L44
 0176 4230              cpi R20,2
 0178 E0E0              ldi R30,0
 017A 5E07              cpc R21,R30
 017C 79F0              breq L45
 017E 4330              cpi R20,3
 0180 E0E0              ldi R30,0
 0182 5E07              cpc R21,R30
 0184 71F0              breq L46
 0186 4430              cpi R20,4
 0188 E0E0              ldi R30,0
 018A 5E07              cpc R21,R30
 018C 69F0              breq L47
 018E 0FC0              xjmp L40
 0190           X1:
 0190                   .dbline 214
 0190           ;       {
 0190           L43:
 0190                   .dbline 215
 0190           ;               case 0: address = 0x80 + y; break;    
 0190 462F              mov R20,R22
 0192 4058              subi R20,128    ; addi 128
 0194                   .dbline 215
 0194 0EC0              xjmp L41
 0196           L44:
 0196                   .dbline 216
 0196           ;       case 1: address = 0x80 + y; break; 
 0196 462F              mov R20,R22
 0198 4058              subi R20,128    ; addi 128
 019A                   .dbline 216
 019A 0BC0              xjmp L41
 019C           L45:
 019C                   .dbline 217
 019C           ;               case 2: address = 0x90 + y; break; 
 019C 462F              mov R20,R22
 019E 4057              subi R20,112    ; addi 144
 01A0                   .dbline 217
 01A0 08C0              xjmp L41
 01A2           L46:
 01A2                   .dbline 218
 01A2           ;               case 3: address = 0x88 + y; break;
 01A2 462F              mov R20,R22
 01A4 4857              subi R20,120    ; addi 136
 01A6                   .dbline 218
 01A6 05C0              xjmp L41
 01A8           L47:
 01A8                   .dbline 219
 01A8           ;               case 4: address = 0x98 + y; break; 
 01A8 462F              mov R20,R22
 01AA 4856              subi R20,104    ; addi 152
 01AC                   .dbline 219
 01AC 02C0              xjmp L41
 01AE           L40:
 01AE                   .dbline 220
 01AE           ;               default:address = 0x80 + y; break;
 01AE 462F              mov R20,R22
 01B0 4058              subi R20,128    ; addi 128
 01B2                   .dbline 220
 01B2           L41:
 01B2                   .dbline 222
 01B2           ;       }
 01B2           ;     Write_char(0, address);
 01B2 242F              mov R18,R20
 01B4 0027              clr R16
 01B6 3BDF              xcall _Write_char
 01B8                   .dbline -2
 01B8           L39:
 01B8 0E940000          xcall pop_gset2
 01BC                   .dbline 0 ; func end
 01BC 0895              ret
 01BE                   .dbsym r address 20 c
 01BE                   .dbsym r y 22 c
 01BE                   .dbsym r x 20 c
 01BE                   .dbend
 01BE                   .dbfunc e LCD_Write_string _LCD_Write_string fV
 01BE           ;              s -> R20,R21
 01BE           ;              Y -> R10
 01BE           ;              X -> R22
                        .even
 01BE           _LCD_Write_string::
 01BE 0E940000          xcall push_gset3
 01C2 A22E              mov R10,R18
 01C4 602F              mov R22,R16
 01C6 4E81              ldd R20,y+6
 01C8 5F81              ldd R21,y+7
 01CA                   .dbline -1
 01CA                   .dbline 226
 01CA           ; }
 01CA           ; /******************************************************************************/
 01CA           ; void LCD_Write_string(unsigned char X,unsigned char Y,unsigned char *s)
 01CA           ; {     //      中英文字符串显示函数
 01CA                   .dbline 227
 01CA           ;       LCD_set_xy( X, Y );   
 01CA 2A2D              mov R18,R10
 01CC 062F              mov R16,R22
 01CE C7DF              xcall _LCD_set_xy
 01D0 09C0              xjmp L50
 01D2           L49:
 01D2                   .dbline 229
 01D2                   .dbline 230
 01D2 FA01              movw R30,R20
 01D4 2081              ldd R18,z+0
 01D6 01E0              ldi R16,1
 01D8 2ADF              xcall _Write_char
 01DA                   .dbline 231
 01DA 4F5F              subi R20,255  ; offset = 1
 01DC 5F4F              sbci R21,255
 01DE                   .dbline 232
 01DE 01E0              ldi R16,1
 01E0 10E0              ldi R17,0
 01E2 5CDF              xcall _Delaynms
 01E4                   .dbline 233
 01E4           L50:
 01E4                   .dbline 228
 01E4           ;     while (*s) 
 01E4 FA01              movw R30,R20
 01E6 2080              ldd R2,z+0
 01E8 2220              tst R2
 01EA 99F7              brne L49
 01EC                   .dbline -2
 01EC           L48:
 01EC 0E940000          xcall pop_gset3
 01F0                   .dbline 0 ; func end
 01F0 0895              ret
 01F2                   .dbsym r s 20 pc
 01F2                   .dbsym r Y 10 c
 01F2                   .dbsym r X 22 c
 01F2                   .dbend
 01F2                   .dbfunc e LCD_Write_number _LCD_Write_number fV
 01F2           ;              s -> R20
                        .even
 01F2           _LCD_Write_number::
 01F2 0E940000          xcall push_gset1
 01F6 402F              mov R20,R16
 01F8                   .dbline -1
 01F8                   .dbline 237
 01F8           ;     {
 01F8           ;               Write_char( 1, *s );
 01F8           ;           s ++;
 01F8           ;               Delaynms(1);
 01F8           ;       }
 01F8           ; }
 01F8           ; /*******************************************************************************/
 01F8           ; void LCD_Write_number(unsigned char s)//      数字显示函数
 01F8           ; {     
 01F8                   .dbline 238
 01F8           ;       Write_char(1,num[s]);
 01F8 80E0              ldi R24,<_num
 01FA 90E0              ldi R25,>_num
 01FC E42F              mov R30,R20
 01FE FF27              clr R31
 0200 E80F              add R30,R24
 0202 F91F              adc R31,R25
 0204 2081              ldd R18,z+0
 0206 01E0              ldi R16,1
 0208 12DF              xcall _Write_char
 020A                   .dbline 239
 020A           ;       Delaynms(1);
 020A 01E0              ldi R16,1
 020C 10E0              ldi R17,0
 020E 46DF              xcall _Delaynms
 0210                   .dbline -2
 0210           L52:
 0210 0E940000          xcall pop_gset1
 0214                   .dbline 0 ; func end
 0214 0895              ret
 0216                   .dbsym r s 20 c
 0216                   .dbend
 0216                   .dbfunc e Lcd_Mark2 _Lcd_Mark2 fV
                        .even
 0216           _Lcd_Mark2::
 0216 2297              sbiw R28,2
 0218                   .dbline -1
 0218                   .dbline 243
 0218           ; }
 0218           ; /******************************************************************************/
 0218           ; void Lcd_Mark2(void)
 0218           ; {
 0218                   .dbline 244
 0218           ;       Clr_Scr();//清屏
 0218 9EDF              xcall _Clr_Scr
 021A                   .dbline 245
 021A           ;       Clr_Scr();//清屏
 021A 9DDF              xcall _Clr_Scr
 021C                   .dbline 246
 021C           ;       LCD_Write_string(1,0,welcome);//
 021C 80E0              ldi R24,<_welcome
 021E 90E0              ldi R25,>_welcome
 0220 9983              std y+1,R25
 0222 8883              std y+0,R24
 0224 2227              clr R18
 0226 01E0              ldi R16,1
 0228 CADF              xcall _LCD_Write_string
 022A                   .dbline 247
 022A           ;       LCD_Write_string(2,0,input);
 022A 80E0              ldi R24,<_input
 022C 90E0              ldi R25,>_input
 022E 9983              std y+1,R25
 0230 8883              std y+0,R24
 0232 2227              clr R18
 0234 02E0              ldi R16,2
 0236 C3DF              xcall _LCD_Write_string
 0238                   .dbline 248
 0238           ;       LCD_Write_string(4,0,ouput);
 0238 80E0              ldi R24,<_ouput
 023A 90E0              ldi R25,>_ouput
 023C 9983              std y+1,R25
 023E 8883              std y+0,R24
 0240 2227              clr R18
 0242 04E0              ldi R16,4
 0244 BCDF              xcall _LCD_Write_string
 0246                   .dbline 249
 0246           ;       LCD_Write_string(3,7,hz);
 0246 80E0              ldi R24,<_hz
 0248 90E0              ldi R25,>_hz
 024A 9983              std y+1,R25
 024C 8883              std y+0,R24
 024E 27E0              ldi R18,7
 0250 03E0              ldi R16,3
 0252 B5DF              xcall _LCD_Write_string
 0254                   .dbline 250
 0254           ;       LCD_Write_string(0,5,sin);
 0254 80E0              ldi R24,<_sin
 0256 90E0              ldi R25,>_sin
 0258 9983              std y+1,R25
 025A 8883              std y+0,R24
 025C 25E0              ldi R18,5
 025E 0027              clr R16
 0260 AEDF              xcall _LCD_Write_string
 0262                   .dbline -2
 0262           L53:
 0262 2296              adiw R28,2
 0264                   .dbline 0 ; func end
 0264 0895              ret
 0266                   .dbend
 0266                   .dbfunc e Lcd_write_number _Lcd_write_number fV
                        .even
 0266           _Lcd_write_number::
 0266                   .dbline -1
 0266                   .dbline 254
 0266           ; }
 0266           ; /******************************************************************************/
 0266           ;  void Lcd_write_number(void)
 0266           ; {  
 0266                   .dbline 255
 0266           ;     LCD_set_xy(4,4);LCD_Write_number(11 );LCD_Write_number(T_1);
 0266 24E0              ldi R18,4
 0268 04E0              ldi R16,4
 026A 79DF              xcall _LCD_set_xy
 026C                   .dbline 255
 026C 0BE0              ldi R16,11
 026E C1DF              xcall _LCD_Write_number
 0270                   .dbline 255
 0270 00910000          lds R16,_T_1
 0274 BEDF              xcall _LCD_Write_number
 0276                   .dbline 256
 0276           ;     LCD_set_xy(4,5);LCD_Write_number(T_2);LCD_Write_number(T_3);
 0276 25E0              ldi R18,5
 0278 04E0              ldi R16,4
 027A 71DF              xcall _LCD_set_xy
 027C                   .dbline 256
 027C 00910100          lds R16,_T_2
 0280 B8DF              xcall _LCD_Write_number
 0282                   .dbline 256
 0282 00910200          lds R16,_T_3
 0286 B5DF              xcall _LCD_Write_number
 0288                   .dbline 257
 0288           ;     LCD_set_xy(4,6);LCD_Write_number(T_4);LCD_Write_number(T_5);
 0288 26E0              ldi R18,6
 028A 04E0              ldi R16,4
 028C 68DF              xcall _LCD_set_xy
 028E                   .dbline 257
 028E 00910300          lds R16,_T_4
 0292 AFDF              xcall _LCD_Write_number
 0294                   .dbline 257
 0294 00910400          lds R16,_T_5
 0298 ACDF              xcall _LCD_Write_number
 029A                   .dbline 258
 029A           ;       LCD_set_xy(4,7);LCD_Write_number(T_6);LCD_Write_number(T_7);
 029A 27E0              ldi R18,7
 029C 04E0              ldi R16,4
 029E 5FDF              xcall _LCD_set_xy
 02A0                   .dbline 258
 02A0 00910500          lds R16,_T_6
 02A4 A6DF              xcall _LCD_Write_number
 02A6                   .dbline 258
 02A6 00910600          lds R16,_T_7
 02AA A3DF              xcall _LCD_Write_number
 02AC                   .dbline -2
 02AC           L54:
 02AC                   .dbline 0 ; func end
 02AC 0895              ret
 02AE                   .dbend
 02AE                   .dbfunc e AD9833_Send_Word _AD9833_Send_Word fV
 02AE           ;              i -> R20
 02AE           ;        Data_In -> R16,R17
                        .even
 02AE           _AD9833_Send_Word::
 02AE 0E940000          xcall push_gset1
 02B2                   .dbline -1
 02B2                   .dbline 264
 02B2           ; }
 02B2           ; 
 02B2           ; /****************************************************************************/
 02B2           ; void AD9833_Send_Word(unsigned int Data_In)
 02B2           ; 
 02B2           ; {
 02B2                   .dbline 266
 02B2           ;               unsigned char i;
 02B2           ;               Set_Bit(PORTD, 1);//SCLK=1;
 02B2 919A              sbi 0x12,1
 02B4                   .dbline 267
 02B4           ;               Clr_Bit(PORTD, 2);//FSYNC=0;
 02B4 9298              cbi 0x12,2
 02B6                   .dbline 268
 02B6           ;               for(i=0;i<16;i++)
 02B6 4427              clr R20
 02B8 0AC0              xjmp L59
 02BA           L56:
 02BA                   .dbline 269
 02BA           ;               {
 02BA                   .dbline 270
 02BA           ;         Set_Bit(PORTD, 1);//SCLK=1;
 02BA 919A              sbi 0x12,1
 02BC                   .dbline 271
 02BC           ;               if(Data_In & 0x8000)
 02BC 17FF              sbrs R17,7
 02BE 02C0              rjmp L60
 02C0                   .dbline 272
 02C0           ;               Set_Bit(PORTD, 0);//SDATA=1;
 02C0 909A              sbi 0x12,0
 02C2 01C0              xjmp L61
 02C4           L60:
 02C4                   .dbline 274
 02C4           ;               else
 02C4           ;               Clr_Bit(PORTD, 0);//SDATA=0;
 02C4 9098              cbi 0x12,0
 02C6           L61:
 02C6                   .dbline 275
 02C6 9198              cbi 0x12,1
 02C8                   .dbline 276
 02C8 000F              lsl R16
 02CA 111F              rol R17
 02CC                   .dbline 277
 02CC           L57:
 02CC                   .dbline 268
 02CC 4395              inc R20
 02CE           L59:
 02CE                   .dbline 268
 02CE 4031              cpi R20,16
 02D0 A0F3              brlo L56
 02D2                   .dbline 278
 02D2           ;               Clr_Bit(PORTD, 1);//SCLK=0;
 02D2           ;       Data_In=Data_In<<1;
 02D2           ;               }
 02D2           ;               Set_Bit(PORTD, 2);//FSYNC=1;
 02D2 929A              sbi 0x12,2
 02D4                   .dbline 279
 02D4           ;               Clr_Bit(PORTD, 1);//SCLK=0;
 02D4 9198              cbi 0x12,1
 02D6                   .dbline -2
 02D6           L55:
 02D6 0E940000          xcall pop_gset1
 02DA                   .dbline 0 ; func end
 02DA 0895              ret
 02DC                   .dbsym r i 20 c
 02DC                   .dbsym r Data_In 16 i
 02DC                   .dbend
 02DC                   .dbfunc e Wave_Generate _Wave_Generate fV
 02DC           ;           temp -> y+16
 02DC           ;    Config_Data -> y+0
 02DC           ;              k -> R10
 02DC           ;          Shape -> y+38
 02DC           ;           Freq -> y+34
                        .even
 02DC           _Wave_Generate::
 02DC 0E940000          xcall push_arg4
 02E0 0E940000          xcall push_gset3
 02E4 6C97              sbiw R28,28
 02E6                   .dbline -1
 02E6                   .dbline 291
 02E6           ; }
 02E6           ; 
 02E6           ; //波形发生函数
 02E6           ; 
 02E6           ; //入口参数: 频率:Freq (<=12000000)
 02E6           ; 
 02E6           ; //          形状:0(正弦波),1(三角波),2(方波)
 02E6           ; 
 02E6           ; //默认: Fmclk=25MHz, 0相移，方波不分频.
 02E6           ; 
 02E6           ;               void  Wave_Generate(unsigned long Freq,unsigned char Shape)
 02E6           ; {
 02E6                   .dbline 295
 02E6           ;         unsigned int Config_Data[8];
 02E6           ;               unsigned long temp;
 02E6           ;               unsigned char k;
 02E6           ;               if(Freq>12000000) Freq=12000000;
 02E6 40E0              ldi R20,0
 02E8 5BE1              ldi R21,27
 02EA 67EB              ldi R22,183
 02EC 70E0              ldi R23,0
 02EE FE01              movw R30,R28
 02F0 22A0              ldd R2,z+34
 02F2 33A0              ldd R3,z+35
 02F4 44A0              ldd R4,z+36
 02F6 55A0              ldd R5,z+37
 02F8 4215              cp R20,R2
 02FA 5305              cpc R21,R3
 02FC 6405              cpc R22,R4
 02FE 7505              cpc R23,R5
 0300 48F4              brsh L63
 0302                   .dbline 295
 0302 40E0              ldi R20,0
 0304 5BE1              ldi R21,27
 0306 67EB              ldi R22,183
 0308 70E0              ldi R23,0
 030A FE01              movw R30,R28
 030C 42A3              std z+34,R20
 030E 53A3              std z+35,R21
 0310 64A3              std z+36,R22
 0312 75A3              std z+37,R23
 0314           L63:
 0314                   .dbline 296
 0314           ;               switch(Shape)
 0314 AEA0              ldd R10,y+38
 0316 BB24              clr R11
 0318 AA20              tst R10
 031A 11F4              brne X2
 031C BB20              tst R11
 031E 51F0              breq L68
 0320           X2:
 0320 C501              movw R24,R10
 0322 8130              cpi R24,1
 0324 E0E0              ldi R30,0
 0326 9E07              cpc R25,R30
 0328 69F0              breq L70
 032A 8230              cpi R24,2
 032C E0E0              ldi R30,0
 032E 9E07              cpc R25,R30
 0330 89F0              breq L72
 0332 18C0              xjmp L65
 0334           X3:
 0334                   .dbline 297
 0334           ;               {
 0334           L68:
 0334                   .dbline 298
 0334           ;      case 0: Config_Data[0]=0x2108;
 0334 88E0              ldi R24,8456
 0336 91E2              ldi R25,33
 0338 9983              std y+1,R25
 033A 8883              std y+0,R24
 033C                   .dbline 299
 033C           ;              Config_Data[7]=0x2008;
 033C 90E2              ldi R25,32
 033E 9F87              std y+15,R25
 0340 8E87              std y+14,R24
 0342                   .dbline 300
 0342           ;              break;
 0342 17C0              xjmp L66
 0344           L70:
 0344                   .dbline 301
 0344           ;      case 1: Config_Data[0]=0x210A;
 0344 8AE0              ldi R24,8458
 0346 91E2              ldi R25,33
 0348 9983              std y+1,R25
 034A 8883              std y+0,R24
 034C                   .dbline 302
 034C           ;              Config_Data[7]=0x200A;
 034C 90E2              ldi R25,32
 034E 9F87              std y+15,R25
 0350 8E87              std y+14,R24
 0352                   .dbline 303
 0352           ;              break;
 0352 0FC0              xjmp L66
 0354           L72:
 0354                   .dbline 304
 0354           ;      case 2: Config_Data[0]=0x2128;
 0354 88E2              ldi R24,8488
 0356 91E2              ldi R25,33
 0358 9983              std y+1,R25
 035A 8883              std y+0,R24
 035C                   .dbline 305
 035C           ;              Config_Data[7]=0x2028;
 035C 90E2              ldi R25,32
 035E 9F87              std y+15,R25
 0360 8E87              std y+14,R24
 0362                   .dbline 306
 0362           ;              break;
 0362 07C0              xjmp L66
 0364           L65:
 0364                   .dbline 307
 0364           ;      default:Config_Data[0]=0x2108;
 0364 88E0              ldi R24,8456
 0366 91E2              ldi R25,33
 0368 9983              std y+1,R25
 036A 8883              std y+0,R24
 036C                   .dbline 308
 036C           ;              Config_Data[7]=0x2008;
 036C 90E2              ldi R25,32
 036E 9F87              std y+15,R25
 0370 8E87              std y+14,R24
 0372                   .dbline 310
 0372           ; 
 0372           ;               }
 0372           L66:
 0372                   .dbline 311
 0372           ;               temp=Freq*10.73;   //temp=Freq*(0x10000000/20000000);
 0372 00E0              ldi R16,<L77
 0374 10E0              ldi R17,>L77
 0376 0E940000          xcall lpm32
 037A 3A93              st -y,R19
 037C 2A93              st -y,R18
 037E 1A93              st -y,R17
 0380 0A93              st -y,R16
 0382 00E0              ldi R16,<L78
 0384 10E0              ldi R17,>L78
 0386 0E940000          xcall lpm32
 038A 3A93              st -y,R19
 038C 2A93              st -y,R18
 038E 1A93              st -y,R17
 0390 0A93              st -y,R16
 0392 FE01              movw R30,R28
 0394            ; stack offset 8
 0394 22A4              ldd R2,z+42
 0396 33A4              ldd R3,z+43
 0398 44A4              ldd R4,z+44
 039A 55A4              ldd R5,z+45
 039C 5694              lsr R5
 039E 4794              ror R4
 03A0 3794              ror R3
 03A2 2794              ror R2
 03A4 8101              movw R16,R2
 03A6 9201              movw R18,R4
 03A8 0E940000          xcall long2fp
 03AC 3A93              st -y,R19
 03AE 2A93              st -y,R18
 03B0 1A93              st -y,R17
 03B2 0A93              st -y,R16
 03B4 0E940000          xcall empy32fs
 03B8 41E0              ldi R20,1
 03BA 50E0              ldi R21,0
 03BC 60E0              ldi R22,0
 03BE 70E0              ldi R23,0
 03C0 FE01              movw R30,R28
 03C2            ; stack offset 8
 03C2 22A4              ldd R2,z+42
 03C4 33A4              ldd R3,z+43
 03C6 44A4              ldd R4,z+44
 03C8 55A4              ldd R5,z+45
 03CA 2422              and R2,R20
 03CC 3522              and R3,R21
 03CE 4622              and R4,R22
 03D0 5722              and R5,R23
 03D2 8101              movw R16,R2
 03D4 9201              movw R18,R4
 03D6 0E940000          xcall long2fp
 03DA 3A93              st -y,R19
 03DC 2A93              st -y,R18
 03DE 1A93              st -y,R17
 03E0 0A93              st -y,R16
 03E2 0E940000          xcall add32fs
 03E6 0E940000          xcall empy32f
 03EA FE01              movw R30,R28
 03EC 008F              std z+24,R16
 03EE 118F              std z+25,R17
 03F0 228F              std z+26,R18
 03F2 338F              std z+27,R19
 03F4 FE01              movw R30,R28
 03F6 208C              ldd R2,z+24
 03F8 318C              ldd R3,z+25
 03FA 428C              ldd R4,z+26
 03FC 538C              ldd R5,z+27
 03FE 5A92              st -y,R5
 0400 4A92              st -y,R4
 0402 3A92              st -y,R3
 0404 2A92              st -y,R2
 0406 00E0              ldi R16,<L79
 0408 10E0              ldi R17,>L79
 040A 0E940000          xcall lpm32
 040E 3A93              st -y,R19
 0410 2A93              st -y,R18
 0412 1A93              st -y,R17
 0414 0A93              st -y,R16
 0416 0E940000          xcall cmp32f
 041A 2CF1              brlt L75
 041C FE01              movw R30,R28
 041E 208C              ldd R2,z+24
 0420 318C              ldd R3,z+25
 0422 428C              ldd R4,z+26
 0424 538C              ldd R5,z+27
 0426 5A92              st -y,R5
 0428 4A92              st -y,R4
 042A 3A92              st -y,R3
 042C 2A92              st -y,R2
 042E 00E0              ldi R16,<L79
 0430 10E0              ldi R17,>L79
 0432 0E940000          xcall lpm32
 0436 3A93              st -y,R19
 0438 2A93              st -y,R18
 043A 1A93              st -y,R17
 043C 0A93              st -y,R16
 043E 0E940000          xcall sub32f
 0442 0E940000          xcall fp2long
 0446 1801              movw R2,R16
 0448 2901              movw R4,R18
 044A 40E0              ldi R20,0
 044C 50E0              ldi R21,0
 044E 60E0              ldi R22,0
 0450 70E8              ldi R23,128
 0452 240E              add R2,R20
 0454 351E              adc R3,R21
 0456 461E              adc R4,R22
 0458 571E              adc R5,R23
 045A FE01              movw R30,R28
 045C 248A              std z+20,R2
 045E 358A              std z+21,R3
 0460 468A              std z+22,R4
 0462 578A              std z+23,R5
 0464 0CC0              xjmp L76
 0466           L75:
 0466 FE01              movw R30,R28
 0468 008D              ldd R16,z+24
 046A 118D              ldd R17,z+25
 046C 228D              ldd R18,z+26
 046E 338D              ldd R19,z+27
 0470 0E940000          xcall fp2long
 0474 FE01              movw R30,R28
 0476 048B              std z+20,R16
 0478 158B              std z+21,R17
 047A 268B              std z+22,R18
 047C 378B              std z+23,R19
 047E           L76:
 047E FE01              movw R30,R28
 0480 2488              ldd R2,z+20
 0482 3588              ldd R3,z+21
 0484 4688              ldd R4,z+22
 0486 5788              ldd R5,z+23
 0488 FE01              movw R30,R28
 048A 208A              std z+16,R2
 048C 318A              std z+17,R3
 048E 428A              std z+18,R4
 0490 538A              std z+19,R5
 0492                   .dbline 312
 0492           ;               Config_Data[1]=temp&0x00003fff;
 0492 4FEF              ldi R20,255
 0494 5FE3              ldi R21,63
 0496 60E0              ldi R22,0
 0498 70E0              ldi R23,0
 049A FE01              movw R30,R28
 049C 2088              ldd R2,z+16
 049E 3188              ldd R3,z+17
 04A0 4288              ldd R4,z+18
 04A2 5388              ldd R5,z+19
 04A4 2422              and R2,R20
 04A6 3522              and R3,R21
 04A8 4622              and R4,R22
 04AA 5722              and R5,R23
 04AC 3B82              std y+3,R3
 04AE 2A82              std y+2,R2
 04B0                   .dbline 313
 04B0           ;               Config_Data[3]=Config_Data[1];
 04B0 3F82              std y+7,R3
 04B2 2E82              std y+6,R2
 04B4                   .dbline 314
 04B4           ;               Config_Data[2]=(temp&0x0fffc000)>>14;
 04B4 40E0              ldi R20,0
 04B6 50EC              ldi R21,192
 04B8 6FEF              ldi R22,255
 04BA 7FE0              ldi R23,15
 04BC FE01              movw R30,R28
 04BE 2088              ldd R2,z+16
 04C0 3188              ldd R3,z+17
 04C2 4288              ldd R4,z+18
 04C4 5388              ldd R5,z+19
 04C6 2422              and R2,R20
 04C8 3522              and R3,R21
 04CA 4622              and R4,R22
 04CC 5722              and R5,R23
 04CE 8EE0              ldi R24,14
 04D0 90E0              ldi R25,0
 04D2 8A93              st -y,R24
 04D4 8101              movw R16,R2
 04D6 9201              movw R18,R4
 04D8 0E940000          xcall lsr32
 04DC 1D83              std y+5,R17
 04DE 0C83              std y+4,R16
 04E0                   .dbline 315
 04E0           ;               Config_Data[4]=Config_Data[2];
 04E0 1801              movw R2,R16
 04E2 3986              std y+9,R3
 04E4 2886              std y+8,R2
 04E6                   .dbline 316
 04E6           ;               Config_Data[1]=Config_Data[1]|0x4000;
 04E6 8A81              ldd R24,y+2
 04E8 9B81              ldd R25,y+3
 04EA 9064              ori R25,64
 04EC 9B83              std y+3,R25
 04EE 8A83              std y+2,R24
 04F0                   .dbline 317
 04F0           ;               Config_Data[2]=Config_Data[2]|0x4000;
 04F0 8C81              ldd R24,y+4
 04F2 9D81              ldd R25,y+5
 04F4 9064              ori R25,64
 04F6 9D83              std y+5,R25
 04F8 8C83              std y+4,R24
 04FA                   .dbline 318
 04FA           ;               Config_Data[3]=Config_Data[3]|0x8000;
 04FA 8E81              ldd R24,y+6
 04FC 9F81              ldd R25,y+7
 04FE 9068              ori R25,128
 0500 9F83              std y+7,R25
 0502 8E83              std y+6,R24
 0504                   .dbline 319
 0504           ;               Config_Data[4]=Config_Data[4]|0x8000;
 0504 8885              ldd R24,y+8
 0506 9985              ldd R25,y+9
 0508 9068              ori R25,128
 050A 9987              std y+9,R25
 050C 8887              std y+8,R24
 050E                   .dbline 320
 050E           ;               Config_Data[5]=0xC000;
 050E 80E0              ldi R24,49152
 0510 90EC              ldi R25,192
 0512 9B87              std y+11,R25
 0514 8A87              std y+10,R24
 0516                   .dbline 321
 0516           ;               Config_Data[6]=0xE000;
 0516 90EE              ldi R25,224
 0518 9D87              std y+13,R25
 051A 8C87              std y+12,R24
 051C                   .dbline 322
 051C           ;               for(k=0;k<8;k++)
 051C AA24              clr R10
 051E 0AC0              xjmp L99
 0520           L96:
 0520                   .dbline 323
 0520                   .dbline 324
 0520 82E0              ldi R24,2
 0522 8A9D              mul R24,R10
 0524 F001              movw R30,R0
 0526 CE01              movw R24,R28
 0528 E80F              add R30,R24
 052A F91F              adc R31,R25
 052C 0081              ldd R16,z+0
 052E 1181              ldd R17,z+1
 0530 BEDE              xcall _AD9833_Send_Word
 0532                   .dbline 325
 0532           L97:
 0532                   .dbline 322
 0532 A394              inc R10
 0534           L99:
 0534                   .dbline 322
 0534 8A2D              mov R24,R10
 0536 8830              cpi R24,8
 0538 98F3              brlo L96
 053A                   .dbline -2
 053A           L62:
 053A 6C96              adiw R28,28
 053C 0E940000          xcall pop_gset3
 0540 2496              adiw R28,4
 0542                   .dbline 0 ; func end
 0542 0895              ret
 0544                   .dbsym l temp 16 l
 0544                   .dbsym l Config_Data 0 A[16:8]i
 0544                   .dbsym r k 10 c
 0544                   .dbsym l Shape 38 c
 0544                   .dbsym l Freq 34 l
 0544                   .dbend
 0544                   .dbfunc e Bcd_Div _Bcd_Div fV
 0544           ;             CV -> y+4
                        .even
 0544           _Bcd_Div::
 0544 0E940000          xcall push_arg4
 0548 0E940000          xcall push_gset2
 054C                   .dbline -1
 054C                   .dbline 329
 054C           ;               {
 054C           ;       AD9833_Send_Word(Config_Data[k]);
 054C           ;               }
 054C           ; }
 054C           ; /****************************************************************************/
 054C           ;    void Bcd_Div(unsigned long CV)
 054C           ; {
 054C                   .dbline 330
 054C           ;     T_1=CV/1000000;
 054C 40E4              ldi R20,64
 054E 52E4              ldi R21,66
 0550 6FE0              ldi R22,15
 0552 70E0              ldi R23,0
 0554 FE01              movw R30,R28
 0556 2480              ldd R2,z+4
 0558 3580              ldd R3,z+5
 055A 4680              ldd R4,z+6
 055C 5780              ldd R5,z+7
 055E 7A93              st -y,R23
 0560 6A93              st -y,R22
 0562 5A93              st -y,R21
 0564 4A93              st -y,R20
 0566 8101              movw R16,R2
 0568 9201              movw R18,R4
 056A 0E940000          xcall div32u
 056E 00930000          sts _T_1,R16
 0572                   .dbline 331
 0572           ;       CV=  CV%1000000;
 0572 40E4              ldi R20,64
 0574 52E4              ldi R21,66
 0576 6FE0              ldi R22,15
 0578 70E0              ldi R23,0
 057A FE01              movw R30,R28
 057C 2480              ldd R2,z+4
 057E 3580              ldd R3,z+5
 0580 4680              ldd R4,z+6
 0582 5780              ldd R5,z+7
 0584 7A93              st -y,R23
 0586 6A93              st -y,R22
 0588 5A93              st -y,R21
 058A 4A93              st -y,R20
 058C 8101              movw R16,R2
 058E 9201              movw R18,R4
 0590 0E940000          xcall mod32u
 0594 FE01              movw R30,R28
 0596 0483              std z+4,R16
 0598 1583              std z+5,R17
 059A 2683              std z+6,R18
 059C 3783              std z+7,R19
 059E                   .dbline 332
 059E           ;       T_2=CV/100000;
 059E 40EA              ldi R20,160
 05A0 56E8              ldi R21,134
 05A2 61E0              ldi R22,1
 05A4 70E0              ldi R23,0
 05A6 FE01              movw R30,R28
 05A8 2480              ldd R2,z+4
 05AA 3580              ldd R3,z+5
 05AC 4680              ldd R4,z+6
 05AE 5780              ldd R5,z+7
 05B0 7A93              st -y,R23
 05B2 6A93              st -y,R22
 05B4 5A93              st -y,R21
 05B6 4A93              st -y,R20
 05B8 8101              movw R16,R2
 05BA 9201              movw R18,R4
 05BC 0E940000          xcall div32u
 05C0 00930100          sts _T_2,R16
 05C4                   .dbline 333
 05C4           ;       CV =  CV%100000;
 05C4 40EA              ldi R20,160
 05C6 56E8              ldi R21,134
 05C8 61E0              ldi R22,1
 05CA 70E0              ldi R23,0
 05CC FE01              movw R30,R28
 05CE 2480              ldd R2,z+4
 05D0 3580              ldd R3,z+5
 05D2 4680              ldd R4,z+6
 05D4 5780              ldd R5,z+7
 05D6 7A93              st -y,R23
 05D8 6A93              st -y,R22
 05DA 5A93              st -y,R21
 05DC 4A93              st -y,R20
 05DE 8101              movw R16,R2
 05E0 9201              movw R18,R4
 05E2 0E940000          xcall mod32u
 05E6 FE01              movw R30,R28
 05E8 0483              std z+4,R16
 05EA 1583              std z+5,R17
 05EC 2683              std z+6,R18
 05EE 3783              std z+7,R19
 05F0                   .dbline 334
 05F0           ;       T_3=CV/10000;
 05F0 40E1              ldi R20,16
 05F2 57E2              ldi R21,39
 05F4 60E0              ldi R22,0
 05F6 70E0              ldi R23,0
 05F8 FE01              movw R30,R28
 05FA 2480              ldd R2,z+4
 05FC 3580              ldd R3,z+5
 05FE 4680              ldd R4,z+6
 0600 5780              ldd R5,z+7
 0602 7A93              st -y,R23
 0604 6A93              st -y,R22
 0606 5A93              st -y,R21
 0608 4A93              st -y,R20
 060A 8101              movw R16,R2
 060C 9201              movw R18,R4
 060E 0E940000          xcall div32u
 0612 00930200          sts _T_3,R16
 0616                   .dbline 335
 0616           ;       CV=  CV%10000;
 0616 40E1              ldi R20,16
 0618 57E2              ldi R21,39
 061A 60E0              ldi R22,0
 061C 70E0              ldi R23,0
 061E FE01              movw R30,R28
 0620 2480              ldd R2,z+4
 0622 3580              ldd R3,z+5
 0624 4680              ldd R4,z+6
 0626 5780              ldd R5,z+7
 0628 7A93              st -y,R23
 062A 6A93              st -y,R22
 062C 5A93              st -y,R21
 062E 4A93              st -y,R20
 0630 8101              movw R16,R2
 0632 9201              movw R18,R4
 0634 0E940000          xcall mod32u
 0638 FE01              movw R30,R28
 063A 0483              std z+4,R16
 063C 1583              std z+5,R17
 063E 2683              std z+6,R18
 0640 3783              std z+7,R19
 0642                   .dbline 336
 0642           ;       T_4=CV/1000;
 0642 48EE              ldi R20,232
 0644 53E0              ldi R21,3
 0646 60E0              ldi R22,0
 0648 70E0              ldi R23,0
 064A FE01              movw R30,R28
 064C 2480              ldd R2,z+4
 064E 3580              ldd R3,z+5
 0650 4680              ldd R4,z+6
 0652 5780              ldd R5,z+7
 0654 7A93              st -y,R23
 0656 6A93              st -y,R22
 0658 5A93              st -y,R21
 065A 4A93              st -y,R20
 065C 8101              movw R16,R2
 065E 9201              movw R18,R4
 0660 0E940000          xcall div32u
 0664 00930300          sts _T_4,R16
 0668                   .dbline 337
 0668           ;       CV=  CV%1000;
 0668 48EE              ldi R20,232
 066A 53E0              ldi R21,3
 066C 60E0              ldi R22,0
 066E 70E0              ldi R23,0
 0670 FE01              movw R30,R28
 0672 2480              ldd R2,z+4
 0674 3580              ldd R3,z+5
 0676 4680              ldd R4,z+6
 0678 5780              ldd R5,z+7
 067A 7A93              st -y,R23
 067C 6A93              st -y,R22
 067E 5A93              st -y,R21
 0680 4A93              st -y,R20
 0682 8101              movw R16,R2
 0684 9201              movw R18,R4
 0686 0E940000          xcall mod32u
 068A FE01              movw R30,R28
 068C 0483              std z+4,R16
 068E 1583              std z+5,R17
 0690 2683              std z+6,R18
 0692 3783              std z+7,R19
 0694                   .dbline 338
 0694           ;       T_5=CV/100;
 0694 44E6              ldi R20,100
 0696 50E0              ldi R21,0
 0698 60E0              ldi R22,0
 069A 70E0              ldi R23,0
 069C FE01              movw R30,R28
 069E 2480              ldd R2,z+4
 06A0 3580              ldd R3,z+5
 06A2 4680              ldd R4,z+6
 06A4 5780              ldd R5,z+7
 06A6 7A93              st -y,R23
 06A8 6A93              st -y,R22
 06AA 5A93              st -y,R21
 06AC 4A93              st -y,R20
 06AE 8101              movw R16,R2
 06B0 9201              movw R18,R4
 06B2 0E940000          xcall div32u
 06B6 00930400          sts _T_5,R16
 06BA                   .dbline 339
 06BA           ;       CV=  CV%100;
 06BA 44E6              ldi R20,100
 06BC 50E0              ldi R21,0
 06BE 60E0              ldi R22,0
 06C0 70E0              ldi R23,0
 06C2 FE01              movw R30,R28
 06C4 2480              ldd R2,z+4
 06C6 3580              ldd R3,z+5
 06C8 4680              ldd R4,z+6
 06CA 5780              ldd R5,z+7
 06CC 7A93              st -y,R23
 06CE 6A93              st -y,R22
 06D0 5A93              st -y,R21
 06D2 4A93              st -y,R20
 06D4 8101              movw R16,R2
 06D6 9201              movw R18,R4
 06D8 0E940000          xcall mod32u
 06DC FE01              movw R30,R28
 06DE 0483              std z+4,R16
 06E0 1583              std z+5,R17
 06E2 2683              std z+6,R18
 06E4 3783              std z+7,R19
 06E6                   .dbline 340
 06E6           ;       T_6=CV/10;
 06E6 4AE0              ldi R20,10
 06E8 50E0              ldi R21,0
 06EA 60E0              ldi R22,0
 06EC 70E0              ldi R23,0
 06EE FE01              movw R30,R28
 06F0 2480              ldd R2,z+4
 06F2 3580              ldd R3,z+5
 06F4 4680              ldd R4,z+6
 06F6 5780              ldd R5,z+7
 06F8 7A93              st -y,R23
 06FA 6A93              st -y,R22
 06FC 5A93              st -y,R21
 06FE 4A93              st -y,R20
 0700 8101              movw R16,R2
 0702 9201              movw R18,R4
 0704 0E940000          xcall div32u
 0708 00930500          sts _T_6,R16
 070C                   .dbline 341
 070C           ;       T_7=CV%10;
 070C 4AE0              ldi R20,10
 070E 50E0              ldi R21,0
 0710 60E0              ldi R22,0
 0712 70E0              ldi R23,0
 0714 FE01              movw R30,R28
 0716 2480              ldd R2,z+4
 0718 3580              ldd R3,z+5
 071A 4680              ldd R4,z+6
 071C 5780              ldd R5,z+7
 071E 7A93              st -y,R23
 0720 6A93              st -y,R22
 0722 5A93              st -y,R21
 0724 4A93              st -y,R20
 0726 8101              movw R16,R2
 0728 9201              movw R18,R4
 072A 0E940000          xcall mod32u
 072E 00930600          sts _T_7,R16
 0732                   .dbline -2
 0732           L100:
 0732 0E940000          xcall pop_gset2
 0736 2496              adiw R28,4
 0738                   .dbline 0 ; func end
 0738 0895              ret
 073A                   .dbsym l CV 4 l
 073A                   .dbend
 073A                   .dbfunc e keypad_scan _keypad_scan fc
 073A           ;            key -> R22
 073A           ;              i -> R20
                        .even
 073A           _keypad_scan::
 073A 0E940000          xcall push_gset2
 073E                   .dbline -1
 073E                   .dbline 346
 073E           ; }
 073E           ; /******************************************************************************/
 073E           ; /*****************************键盘扫描*****************************************/
 073E           ; unsigned char keypad_scan()
 073E           ; {
 073E                   .dbline 348
 073E           ;     unsigned char key,i;
 073E           ;     PORTB=0xF0;
 073E 80EF              ldi R24,240
 0740 88BB              out 0x18,R24
 0742 28C0              xjmp L103
 0744           L102:
 0744                   .dbline 350
 0744           ;     while (PINB!=0xF0)
 0744           ;     {  
 0744                   .dbline 351
 0744           ;        for(i=0;i<=3;i++)
 0744 4427              clr R20
 0746 23C0              xjmp L108
 0748           L105:
 0748                   .dbline 352
 0748           ;        {         
 0748                   .dbline 353
 0748           ;            PORTB=ksp[i];
 0748 80E0              ldi R24,<_ksp
 074A 90E0              ldi R25,>_ksp
 074C E42F              mov R30,R20
 074E FF27              clr R31
 0750 E80F              add R30,R24
 0752 F91F              adc R31,R25
 0754 E491              lpm R30,Z
 0756 E8BB              out 0x18,R30
 0758                   .dbline 354
 0758           ;            if(PINB!=ksp[i])
 0758 E42F              mov R30,R20
 075A FF27              clr R31
 075C E80F              add R30,R24
 075E F91F              adc R31,R25
 0760 E491              lpm R30,Z
 0762 26B2              in R2,0x16
 0764 2E16              cp R2,R30
 0766 91F0              breq L109
 0768                   .dbline 355
 0768           ;            {
 0768                   .dbline 356
 0768           ;               Delaynms(1000);
 0768 08EE              ldi R16,1000
 076A 13E0              ldi R17,3
 076C 97DC              xcall _Delaynms
 076E                   .dbline 357
 076E           ;               key=PINB;
 076E 66B3              in R22,0x16
 0770                   .dbline 358
 0770           ;               if(key!=ksp[i])
 0770 80E0              ldi R24,<_ksp
 0772 90E0              ldi R25,>_ksp
 0774 E42F              mov R30,R20
 0776 FF27              clr R31
 0778 E80F              add R30,R24
 077A F91F              adc R31,R25
 077C E491              lpm R30,Z
 077E 6E17              cp R22,R30
 0780 29F0              breq L111
 0782                   .dbline 359
 0782           ;               {
 0782           L113:
 0782                   .dbline 360
 0782           L114:
 0782                   .dbline 360
 0782           ;                             while(key==PINB);
 0782 26B2              in R2,0x16
 0784 6215              cp R22,R2
 0786 E9F3              breq L113
 0788                   .dbline 361
 0788           ;                   return(key);
 0788 062F              mov R16,R22
 078A 07C0              xjmp L101
 078C           L111:
 078C                   .dbline 363
 078C           ;               }
 078C           ;            }
 078C           L109:
 078C                   .dbline 364
 078C           L106:
 078C                   .dbline 351
 078C 4395              inc R20
 078E           L108:
 078E                   .dbline 351
 078E 83E0              ldi R24,3
 0790 8417              cp R24,R20
 0792 D0F6              brsh L105
 0794                   .dbline 365
 0794           L103:
 0794                   .dbline 349
 0794 86B3              in R24,0x16
 0796 803F              cpi R24,240
 0798 A9F6              brne L102
 079A                   .dbline -2
 079A           L101:
 079A 0E940000          xcall pop_gset2
 079E                   .dbline 0 ; func end
 079E 0895              ret
 07A0                   .dbsym r key 22 c
 07A0                   .dbsym r i 20 c
 07A0                   .dbend
 07A0                   .dbfunc e gotkey _gotkey fc
 07A0           ;           temp -> R20
 07A0           ;              i -> R22
                        .even
 07A0           _gotkey::
 07A0 0E940000          xcall push_gset2
 07A4                   .dbline -1
 07A4                   .dbline 369
 07A4           ;        }
 07A4           ;      }
 07A4           ; }
 07A4           ; // 检查是否有按键按下
 07A4           ; unsigned char gotkey()
 07A4           ; {
 07A4                   .dbline 371
 07A4           ;      char temp,i;
 07A4           ;      temp=keypad_scan();
 07A4 CADF              xcall _keypad_scan
 07A6 402F              mov R20,R16
 07A8                   .dbline 372
 07A8           ;      for (i=0;i<=15;i++)
 07A8 6627              clr R22
 07AA 0CC0              xjmp L120
 07AC           L117:
 07AC                   .dbline 373
 07AC           ;        {
 07AC                   .dbline 374
 07AC           ;       if(temp==key_code[i]) return(i);
 07AC 80E0              ldi R24,<_key_code
 07AE 90E0              ldi R25,>_key_code
 07B0 E62F              mov R30,R22
 07B2 FF27              clr R31
 07B4 E80F              add R30,R24
 07B6 F91F              adc R31,R25
 07B8 E491              lpm R30,Z
 07BA 4E17              cp R20,R30
 07BC 11F4              brne L121
 07BE                   .dbline 374
 07BE 062F              mov R16,R22
 07C0 05C0              xjmp L116
 07C2           L121:
 07C2                   .dbline 375
 07C2           L118:
 07C2                   .dbline 372
 07C2 6395              inc R22
 07C4           L120:
 07C4                   .dbline 372
 07C4 8FE0              ldi R24,15
 07C6 8617              cp R24,R22
 07C8 88F7              brsh L117
 07CA                   .dbline 376
 07CA           ;      }
 07CA           ;      return(0xff);
 07CA 0FEF              ldi R16,255
 07CC                   .dbline -2
 07CC           L116:
 07CC 0E940000          xcall pop_gset2
 07D0                   .dbline 0 ; func end
 07D0 0895              ret
 07D2                   .dbsym r temp 20 c
 07D2                   .dbsym r i 22 c
 07D2                   .dbend
 07D2                   .dbfunc e main _main fV
                        .area func_lit(rom, con, rel)
 0000           L155:
 0000 9704              .word `L132
 0002 9704              .word `L132
 0004 9704              .word `L132
 0006 9704              .word `L132
 0008 9704              .word `L132
 000A 9704              .word `L132
 000C 9704              .word `L132
 000E 9704              .word `L132
 0010 9704              .word `L132
 0012 9704              .word `L132
 0014 2805              .word `L143
 0016 8D05              .word `L144
 0018 2906              .word `L145
 001A 7206              .word `L130
 001C 7206              .word `L130
 001E 7206              .word `L130
                        .area text(rom, con, rel)
 07D2                   .dbfile E:\制版成功\YL-60\YL-60A~2\4.相关例程\27.键盘+12864+AD9833\键盘+12864.c
 07D2           ;              I -> y+37
 07D2           ;              C -> y+30
 07D2           ;              B -> y+26
 07D2           ;              A -> y+22
 07D2           ;              K -> y+18
 07D2           ;              Z -> y+14
 07D2           ;              Y -> y+10
 07D2           ;              X -> y+6
 07D2           ;          S_ape -> y+36
 07D2           ;              M -> y+35
 07D2           ;              D -> y+2
 07D2           ;              U -> y+34
                        .even
 07D2           _main::
 07D2 A697              sbiw R28,38
 07D4                   .dbline -1
 07D4                   .dbline 380
 07D4           ; }
 07D4           ; /*********************************************************************************/
 07D4           ; void main(void)//主函数
 07D4           ; {
 07D4                   .dbline 381
 07D4           ;     unsigned char U,I,S_ape=0,M=0;
 07D4 0024              clr R0
 07D6 0CA2              std y+36,R0
 07D8                   .dbline 381
 07D8 0BA2              std y+35,R0
 07DA                   .dbline 382
 07DA           ;       unsigned long X=0,Y=0,Z=0,K=0,A=0,B=0,C=0,D=1000;//D为启动时给9833送1000Hz控制字
 07DA 40E0              ldi R20,0
 07DC 50E0              ldi R21,0
 07DE 60E0              ldi R22,0
 07E0 70E0              ldi R23,0
 07E2 FE01              movw R30,R28
 07E4 4683              std z+6,R20
 07E6 5783              std z+7,R21
 07E8 6087              std z+8,R22
 07EA 7187              std z+9,R23
 07EC                   .dbline 382
 07EC 40E0              ldi R20,0
 07EE 50E0              ldi R21,0
 07F0 60E0              ldi R22,0
 07F2 70E0              ldi R23,0
 07F4 FE01              movw R30,R28
 07F6 4287              std z+10,R20
 07F8 5387              std z+11,R21
 07FA 6487              std z+12,R22
 07FC 7587              std z+13,R23
 07FE                   .dbline 382
 07FE 40E0              ldi R20,0
 0800 50E0              ldi R21,0
 0802 60E0              ldi R22,0
 0804 70E0              ldi R23,0
 0806 FE01              movw R30,R28
 0808 4687              std z+14,R20
 080A 5787              std z+15,R21
 080C 608B              std z+16,R22
 080E 718B              std z+17,R23
 0810                   .dbline 382
 0810 40E0              ldi R20,0
 0812 50E0              ldi R21,0
 0814 60E0              ldi R22,0
 0816 70E0              ldi R23,0
 0818 FE01              movw R30,R28
 081A 428B              std z+18,R20
 081C 538B              std z+19,R21
 081E 648B              std z+20,R22
 0820 758B              std z+21,R23
 0822                   .dbline 382
 0822 40E0              ldi R20,0
 0824 50E0              ldi R21,0
 0826 60E0              ldi R22,0
 0828 70E0              ldi R23,0
 082A FE01              movw R30,R28
 082C 468B              std z+22,R20
 082E 578B              std z+23,R21
 0830 608F              std z+24,R22
 0832 718F              std z+25,R23
 0834                   .dbline 382
 0834 40E0              ldi R20,0
 0836 50E0              ldi R21,0
 0838 60E0              ldi R22,0
 083A 70E0              ldi R23,0
 083C FE01              movw R30,R28
 083E 428F              std z+26,R20
 0840 538F              std z+27,R21
 0842 648F              std z+28,R22
 0844 758F              std z+29,R23
 0846                   .dbline 382
 0846 40E0              ldi R20,0
 0848 50E0              ldi R21,0
 084A 60E0              ldi R22,0
 084C 70E0              ldi R23,0
 084E FE01              movw R30,R28
 0850 468F              std z+30,R20
 0852 578F              std z+31,R21
 0854 60A3              std z+32,R22
 0856 71A3              std z+33,R23
 0858                   .dbline 382
 0858 48EE              ldi R20,232
 085A 53E0              ldi R21,3
 085C 60E0              ldi R22,0
 085E 70E0              ldi R23,0
 0860 FE01              movw R30,R28
 0862 4283              std z+2,R20
 0864 5383              std z+3,R21
 0866 6483              std z+4,R22
 0868 7583              std z+5,R23
 086A                   .dbline 383
 086A           ;       DDRA|=BIT(2)|BIT(3)|BIT(4);//设置PA2,PA3,PA4为输出
 086A 8AB3              in R24,0x1a
 086C 8C61              ori R24,28
 086E 8ABB              out 0x1a,R24
 0870                   .dbline 384
 0870           ;       PORTA=0xFF;
 0870 8FEF              ldi R24,255
 0872 8BBB              out 0x1b,R24
 0874                   .dbline 385
 0874           ;       DDRB=0XF0;
 0874 80EF              ldi R24,240
 0876 87BB              out 0x17,R24
 0878                   .dbline 386
 0878           ;       PORTB=0XFF;
 0878 8FEF              ldi R24,255
 087A 88BB              out 0x18,R24
 087C                   .dbline 387
 087C           ;       DDRD=0XFF;
 087C 81BB              out 0x11,R24
 087E                   .dbline 388
 087E           ;       PORTD=0XFF;
 087E 82BB              out 0x12,R24
 0880                   .dbline 389
 0880           ;       Wave_Generate(1000,0); //1000Hz的正弦波
 0880 2224              clr R2
 0882 2882              std y+0,R2
 0884 08EE              ldi R16,232
 0886 13E0              ldi R17,3
 0888 20E0              ldi R18,0
 088A 30E0              ldi R19,0
 088C 27DD              xcall _Wave_Generate
 088E                   .dbline 390
 088E           ;       Lcd_init();//设置液晶显示器
 088E B8DB              xcall _Lcd_init
 0890                   .dbline 391
 0890           ;       Clr_Scr();//清屏        
 0890 62DC              xcall _Clr_Scr
 0892                   .dbline 392
 0892           ;       Disp_img(logo); //显示我们的AVR
 0892 00E0              ldi R16,<_logo
 0894 10E0              ldi R17,>_logo
 0896 18DC              xcall _Disp_img
 0898                   .dbline 393
 0898           ;       Delaynms(30000);//显示画面等待时间
 0898 00E3              ldi R16,30000
 089A 15E7              ldi R17,117
 089C FFDB              xcall _Delaynms
 089E                   .dbline 394
 089E           ;     Lcd_init();
 089E B0DB              xcall _Lcd_init
 08A0                   .dbline 395
 08A0           ;       Lcd_Mark2();
 08A0 BADC              xcall _Lcd_Mark2
 08A2                   .dbline 396
 08A2           ;       LCD_set_xy(3,6);LCD_Write_number(10);
 08A2 26E0              ldi R18,6
 08A4 03E0              ldi R16,3
 08A6 5BDC              xcall _LCD_set_xy
 08A8                   .dbline 396
 08A8 0AE0              ldi R16,10
 08AA A3DC              xcall _LCD_Write_number
 08AC                   .dbline 397
 08AC           ;       LCD_set_xy(3,5);LCD_Write_number(10);
 08AC 25E0              ldi R18,5
 08AE 03E0              ldi R16,3
 08B0 56DC              xcall _LCD_set_xy
 08B2                   .dbline 397
 08B2 0AE0              ldi R16,10
 08B4 9EDC              xcall _LCD_Write_number
 08B6                   .dbline 398
 08B6           ;     LCD_set_xy(3,4);LCD_Write_number(10);
 08B6 24E0              ldi R18,4
 08B8 03E0              ldi R16,3
 08BA 51DC              xcall _LCD_set_xy
 08BC                   .dbline 398
 08BC 0AE0              ldi R16,10
 08BE 99DC              xcall _LCD_Write_number
 08C0                   .dbline 399
 08C0           ;       LCD_set_xy(3,3);LCD_Write_number(10);
 08C0 23E0              ldi R18,3
 08C2 03E0              ldi R16,3
 08C4 4CDC              xcall _LCD_set_xy
 08C6                   .dbline 399
 08C6 0AE0              ldi R16,10
 08C8 94DC              xcall _LCD_Write_number
 08CA                   .dbline 400
 08CA           ;     LCD_set_xy(3,2);LCD_Write_number(10);
 08CA 22E0              ldi R18,2
 08CC 03E0              ldi R16,3
 08CE 47DC              xcall _LCD_set_xy
 08D0                   .dbline 400
 08D0 0AE0              ldi R16,10
 08D2 8FDC              xcall _LCD_Write_number
 08D4                   .dbline 401
 08D4           ;     LCD_set_xy(3,1);LCD_Write_number(10);
 08D4 21E0              ldi R18,1
 08D6 03E0              ldi R16,3
 08D8 42DC              xcall _LCD_set_xy
 08DA                   .dbline 401
 08DA 0AE0              ldi R16,10
 08DC 8ADC              xcall _LCD_Write_number
 08DE                   .dbline 402
 08DE           ;       LCD_set_xy(3,0);LCD_Write_number(10);
 08DE 2227              clr R18
 08E0 03E0              ldi R16,3
 08E2 3DDC              xcall _LCD_set_xy
 08E4                   .dbline 402
 08E4 0AE0              ldi R16,10
 08E6 85DC              xcall _LCD_Write_number
 08E8                   .dbline 403
 08E8           ;     Lcd_write_number();        
 08E8 BEDC              xcall _Lcd_write_number
 08EA FCC1              xjmp L125
 08EC           L124:
 08EC                   .dbline 405
 08EC           ;       while(1)
 08EC           ;       {
 08EC                   .dbline 406
 08EC           ;        U=gotkey();
 08EC 59DF              xcall _gotkey
 08EE 0AA3              std y+34,R16
 08F0                   .dbline 407
 08F0           ;        if(U!=255)
 08F0 802F              mov R24,R16
 08F2 0F3F              cpi R16,255
 08F4 09F4              brne X8
 08F6 F6C1              xjmp L127
 08F8           X8:
 08F8                   .dbline 408
 08F8           ;        { 
 08F8                   .dbline 410
 08F8           ;          
 08F8           ;                switch(U)
 08F8 C82E              mov R12,R24
 08FA DD24              clr R13
 08FC C601              movw R24,R12
 08FE 8030              cpi R24,0
 0900 E0E0              ldi R30,0
 0902 9E07              cpc R25,R30
 0904 0CF4              brge X9
 0906 EEC1              xjmp L130
 0908           X9:
 0908 8FE0              ldi R24,15
 090A 8C15              cp R24,R12
 090C 9D05              cpc R25,R13
 090E 0CF4              brge X10
 0910 E9C1              xjmp L130
 0912           X10:
 0912 02E0              ldi R16,2
 0914 10E0              ldi R17,0
 0916 9601              movw R18,R12
 0918 0E940000          xcall empy16s
 091C F801              movw R30,R16
 091E 80E0              ldi R24,<L155
 0920 90E0              ldi R25,>L155
 0922 E80F              add R30,R24
 0924 F91F              adc R31,R25
 0926 0590              lpm R0,Z+
 0928 1490              lpm R1,Z
 092A F001              movw R30,R0
 092C 0994              ijmp
 092E           X4:
 092E                   .dbline 411
 092E           ;               { 
 092E           L132:
 092E                   .dbline 422
 092E           ;               case 0: 
 092E           ;               case 1: 
 092E           ;               case 2: 
 092E           ;               case 3: 
 092E           ;               case 4: 
 092E           ;               case 5: 
 092E           ;               case 6: 
 092E           ;               case 7: 
 092E           ;               case 8: 
 092E           ;               case 9:
 092E           ;                M++; 
 092E 0BA0              ldd R0,y+35
 0930 0394              inc R0
 0932 0BA2              std y+35,R0
 0934                   .dbline 423
 0934           ;              switch(M)
 0934 A02C              mov R10,R0
 0936 BB24              clr R11
 0938 C501              movw R24,R10
 093A 8130              cpi R24,1
 093C E0E0              ldi R30,0
 093E 9E07              cpc R25,R30
 0940 F1F0              breq L136
 0942 8230              cpi R24,2
 0944 E0E0              ldi R30,0
 0946 9E07              cpc R25,R30
 0948 49F1              breq L137
 094A 8330              cpi R24,3
 094C E0E0              ldi R30,0
 094E 9E07              cpc R25,R30
 0950 09F4              brne X11
 0952 33C0              xjmp L138
 0954           X11:
 0954 8430              cpi R24,4
 0956 E0E0              ldi R30,0
 0958 9E07              cpc R25,R30
 095A 09F4              brne X12
 095C 3DC0              xjmp L139
 095E           X12:
 095E 8530              cpi R24,5
 0960 E0E0              ldi R30,0
 0962 9E07              cpc R25,R30
 0964 09F4              brne X13
 0966 47C0              xjmp L140
 0968           X13:
 0968 8630              cpi R24,6
 096A E0E0              ldi R30,0
 096C 9E07              cpc R25,R30
 096E 09F4              brne X14
 0970 51C0              xjmp L141
 0972           X14:
 0972 8730              cpi R24,7
 0974 E0E0              ldi R30,0
 0976 9E07              cpc R25,R30
 0978 09F4              brne X15
 097A 5BC0              xjmp L142
 097C           X15:
 097C B3C1              xjmp L130
 097E           X5:
 097E                   .dbline 424
 097E           ;              {
 097E           L136:
 097E                   .dbline 425
 097E           ;                       case 1:LCD_set_xy(3,0);LCD_Write_number(U);X=U; break;
 097E 2227              clr R18
 0980 03E0              ldi R16,3
 0982 EDDB              xcall _LCD_set_xy
 0984                   .dbline 425
 0984 0AA1              ldd R16,y+34
 0986 35DC              xcall _LCD_Write_number
 0988                   .dbline 425
 0988 2AA0              ldd R2,y+34
 098A 3324              clr R3
 098C 4424              clr R4
 098E 5524              clr R5
 0990 FE01              movw R30,R28
 0992 2682              std z+6,R2
 0994 3782              std z+7,R3
 0996 4086              std z+8,R4
 0998 5186              std z+9,R5
 099A                   .dbline 425
 099A A4C1              xjmp L130
 099C           L137:
 099C                   .dbline 426
 099C           ;                       case 2:LCD_set_xy(3,1);LCD_Write_number(U);Y=U; break;
 099C 21E0              ldi R18,1
 099E 03E0              ldi R16,3
 09A0 DEDB              xcall _LCD_set_xy
 09A2                   .dbline 426
 09A2 0AA1              ldd R16,y+34
 09A4 26DC              xcall _LCD_Write_number
 09A6                   .dbline 426
 09A6 2AA0              ldd R2,y+34
 09A8 3324              clr R3
 09AA 4424              clr R4
 09AC 5524              clr R5
 09AE FE01              movw R30,R28
 09B0 2286              std z+10,R2
 09B2 3386              std z+11,R3
 09B4 4486              std z+12,R4
 09B6 5586              std z+13,R5
 09B8                   .dbline 426
 09B8 95C1              xjmp L130
 09BA           L138:
 09BA                   .dbline 427
 09BA           ;                       case 3:LCD_set_xy(3,2);LCD_Write_number(U);Z=U; break;
 09BA 22E0              ldi R18,2
 09BC 03E0              ldi R16,3
 09BE CFDB              xcall _LCD_set_xy
 09C0                   .dbline 427
 09C0 0AA1              ldd R16,y+34
 09C2 17DC              xcall _LCD_Write_number
 09C4                   .dbline 427
 09C4 2AA0              ldd R2,y+34
 09C6 3324              clr R3
 09C8 4424              clr R4
 09CA 5524              clr R5
 09CC FE01              movw R30,R28
 09CE 2686              std z+14,R2
 09D0 3786              std z+15,R3
 09D2 408A              std z+16,R4
 09D4 518A              std z+17,R5
 09D6                   .dbline 427
 09D6 86C1              xjmp L130
 09D8           L139:
 09D8                   .dbline 428
 09D8           ;                       case 4:LCD_set_xy(3,3);LCD_Write_number(U);K=U; break;
 09D8 23E0              ldi R18,3
 09DA 03E0              ldi R16,3
 09DC C0DB              xcall _LCD_set_xy
 09DE                   .dbline 428
 09DE 0AA1              ldd R16,y+34
 09E0 08DC              xcall _LCD_Write_number
 09E2                   .dbline 428
 09E2 2AA0              ldd R2,y+34
 09E4 3324              clr R3
 09E6 4424              clr R4
 09E8 5524              clr R5
 09EA FE01              movw R30,R28
 09EC 228A              std z+18,R2
 09EE 338A              std z+19,R3
 09F0 448A              std z+20,R4
 09F2 558A              std z+21,R5
 09F4                   .dbline 428
 09F4 77C1              xjmp L130
 09F6           L140:
 09F6                   .dbline 429
 09F6           ;                       case 5:LCD_set_xy(3,4);LCD_Write_number(U);A=U; break;
 09F6 24E0              ldi R18,4
 09F8 03E0              ldi R16,3
 09FA B1DB              xcall _LCD_set_xy
 09FC                   .dbline 429
 09FC 0AA1              ldd R16,y+34
 09FE F9DB              xcall _LCD_Write_number
 0A00                   .dbline 429
 0A00 2AA0              ldd R2,y+34
 0A02 3324              clr R3
 0A04 4424              clr R4
 0A06 5524              clr R5
 0A08 FE01              movw R30,R28
 0A0A 268A              std z+22,R2
 0A0C 378A              std z+23,R3
 0A0E 408E              std z+24,R4
 0A10 518E              std z+25,R5
 0A12                   .dbline 429
 0A12 68C1              xjmp L130
 0A14           L141:
 0A14                   .dbline 430
 0A14           ;                       case 6:LCD_set_xy(3,5);LCD_Write_number(U);B=U; break;
 0A14 25E0              ldi R18,5
 0A16 03E0              ldi R16,3
 0A18 A2DB              xcall _LCD_set_xy
 0A1A                   .dbline 430
 0A1A 0AA1              ldd R16,y+34
 0A1C EADB              xcall _LCD_Write_number
 0A1E                   .dbline 430
 0A1E 2AA0              ldd R2,y+34
 0A20 3324              clr R3
 0A22 4424              clr R4
 0A24 5524              clr R5
 0A26 FE01              movw R30,R28
 0A28 228E              std z+26,R2
 0A2A 338E              std z+27,R3
 0A2C 448E              std z+28,R4
 0A2E 558E              std z+29,R5
 0A30                   .dbline 430
 0A30 59C1              xjmp L130
 0A32           L142:
 0A32                   .dbline 431
 0A32           ;                       case 7:LCD_set_xy(3,6);LCD_Write_number(U);C=U; break;
 0A32 26E0              ldi R18,6
 0A34 03E0              ldi R16,3
 0A36 93DB              xcall _LCD_set_xy
 0A38                   .dbline 431
 0A38 0AA1              ldd R16,y+34
 0A3A DBDB              xcall _LCD_Write_number
 0A3C                   .dbline 431
 0A3C 2AA0              ldd R2,y+34
 0A3E 3324              clr R3
 0A40 4424              clr R4
 0A42 5524              clr R5
 0A44 FE01              movw R30,R28
 0A46 268E              std z+30,R2
 0A48 378E              std z+31,R3
 0A4A 40A2              std z+32,R4
 0A4C 51A2              std z+33,R5
 0A4E                   .dbline 431
 0A4E                   .dbline 432
 0A4E           ;                       default:break;
 0A4E                   .dbline 433
 0A4E           ;                   }break;
 0A4E 4AC1              xjmp L130
 0A50           L143:
 0A50                   .dbline 435
 0A50           ; 
 0A50           ;               case 10: { 
 0A50                   .dbline 436
 0A50           ;                         LCD_set_xy(3,6);LCD_Write_number(10);X=0;
 0A50 26E0              ldi R18,6
 0A52 03E0              ldi R16,3
 0A54 84DB              xcall _LCD_set_xy
 0A56                   .dbline 436
 0A56 0AE0              ldi R16,10
 0A58 CCDB              xcall _LCD_Write_number
 0A5A                   .dbline 436
 0A5A 40E0              ldi R20,0
 0A5C 50E0              ldi R21,0
 0A5E 60E0              ldi R22,0
 0A60 70E0              ldi R23,0
 0A62 FE01              movw R30,R28
 0A64 4683              std z+6,R20
 0A66 5783              std z+7,R21
 0A68 6087              std z+8,R22
 0A6A 7187              std z+9,R23
 0A6C                   .dbline 437
 0A6C           ;                             LCD_set_xy(3,5);LCD_Write_number(10);Y=0;
 0A6C 25E0              ldi R18,5
 0A6E 03E0              ldi R16,3
 0A70 76DB              xcall _LCD_set_xy
 0A72                   .dbline 437
 0A72 0AE0              ldi R16,10
 0A74 BEDB              xcall _LCD_Write_number
 0A76                   .dbline 437
 0A76 40E0              ldi R20,0
 0A78 50E0              ldi R21,0
 0A7A 60E0              ldi R22,0
 0A7C 70E0              ldi R23,0
 0A7E FE01              movw R30,R28
 0A80 4287              std z+10,R20
 0A82 5387              std z+11,R21
 0A84 6487              std z+12,R22
 0A86 7587              std z+13,R23
 0A88                   .dbline 438
 0A88           ;                                 LCD_set_xy(3,4);LCD_Write_number(10);Z=0;
 0A88 24E0              ldi R18,4
 0A8A 03E0              ldi R16,3
 0A8C 68DB              xcall _LCD_set_xy
 0A8E                   .dbline 438
 0A8E 0AE0              ldi R16,10
 0A90 B0DB              xcall _LCD_Write_number
 0A92                   .dbline 438
 0A92 40E0              ldi R20,0
 0A94 50E0              ldi R21,0
 0A96 60E0              ldi R22,0
 0A98 70E0              ldi R23,0
 0A9A FE01              movw R30,R28
 0A9C 4687              std z+14,R20
 0A9E 5787              std z+15,R21
 0AA0 608B              std z+16,R22
 0AA2 718B              std z+17,R23
 0AA4                   .dbline 439
 0AA4           ;                             LCD_set_xy(3,3);LCD_Write_number(10);K=0;
 0AA4 23E0              ldi R18,3
 0AA6 03E0              ldi R16,3
 0AA8 5ADB              xcall _LCD_set_xy
 0AAA                   .dbline 439
 0AAA 0AE0              ldi R16,10
 0AAC A2DB              xcall _LCD_Write_number
 0AAE                   .dbline 439
 0AAE 40E0              ldi R20,0
 0AB0 50E0              ldi R21,0
 0AB2 60E0              ldi R22,0
 0AB4 70E0              ldi R23,0
 0AB6 FE01              movw R30,R28
 0AB8 428B              std z+18,R20
 0ABA 538B              std z+19,R21
 0ABC 648B              std z+20,R22
 0ABE 758B              std z+21,R23
 0AC0                   .dbline 440
 0AC0           ;                             LCD_set_xy(3,2);LCD_Write_number(10);A=0;
 0AC0 22E0              ldi R18,2
 0AC2 03E0              ldi R16,3
 0AC4 4CDB              xcall _LCD_set_xy
 0AC6                   .dbline 440
 0AC6 0AE0              ldi R16,10
 0AC8 94DB              xcall _LCD_Write_number
 0ACA                   .dbline 440
 0ACA 40E0              ldi R20,0
 0ACC 50E0              ldi R21,0
 0ACE 60E0              ldi R22,0
 0AD0 70E0              ldi R23,0
 0AD2 FE01              movw R30,R28
 0AD4 468B              std z+22,R20
 0AD6 578B              std z+23,R21
 0AD8 608F              std z+24,R22
 0ADA 718F              std z+25,R23
 0ADC                   .dbline 441
 0ADC           ;                             LCD_set_xy(3,1);LCD_Write_number(10);B=0;
 0ADC 21E0              ldi R18,1
 0ADE 03E0              ldi R16,3
 0AE0 3EDB              xcall _LCD_set_xy
 0AE2                   .dbline 441
 0AE2 0AE0              ldi R16,10
 0AE4 86DB              xcall _LCD_Write_number
 0AE6                   .dbline 441
 0AE6 40E0              ldi R20,0
 0AE8 50E0              ldi R21,0
 0AEA 60E0              ldi R22,0
 0AEC 70E0              ldi R23,0
 0AEE FE01              movw R30,R28
 0AF0 428F              std z+26,R20
 0AF2 538F              std z+27,R21
 0AF4 648F              std z+28,R22
 0AF6 758F              std z+29,R23
 0AF8                   .dbline 442
 0AF8           ;                             LCD_set_xy(3,0);LCD_Write_number(10);C=0; M=0;
 0AF8 2227              clr R18
 0AFA 03E0              ldi R16,3
 0AFC 30DB              xcall _LCD_set_xy
 0AFE                   .dbline 442
 0AFE 0AE0              ldi R16,10
 0B00 78DB              xcall _LCD_Write_number
 0B02                   .dbline 442
 0B02 40E0              ldi R20,0
 0B04 50E0              ldi R21,0
 0B06 60E0              ldi R22,0
 0B08 70E0              ldi R23,0
 0B0A FE01              movw R30,R28
 0B0C 468F              std z+30,R20
 0B0E 578F              std z+31,R21
 0B10 60A3              std z+32,R22
 0B12 71A3              std z+33,R23
 0B14                   .dbline 442
 0B14 0024              clr R0
 0B16 0BA2              std y+35,R0
 0B18                   .dbline 443
 0B18           ;                                 } break; 
 0B18                   .dbline 443
 0B18 E5C0              xjmp L130
 0B1A           L144:
 0B1A                   .dbline 444
 0B1A           ;               case 11:  {  
 0B1A                   .dbline 445
 0B1A           ;                           D=X*1000000+Y*100000+Z*10000+K*1000+A*100+B*10+C;
 0B1A FE01              movw R30,R28
 0B1C 2284              ldd R2,z+10
 0B1E 3384              ldd R3,z+11
 0B20 4484              ldd R4,z+12
 0B22 5584              ldd R5,z+13
 0B24 40EA              ldi R20,160
 0B26 56E8              ldi R21,134
 0B28 61E0              ldi R22,1
 0B2A 70E0              ldi R23,0
 0B2C 5A92              st -y,R5
 0B2E 4A92              st -y,R4
 0B30 3A92              st -y,R3
 0B32 2A92              st -y,R2
 0B34 8A01              movw R16,R20
 0B36 9B01              movw R18,R22
 0B38 0E940000          xcall empy32u
 0B3C 1801              movw R2,R16
 0B3E 2901              movw R4,R18
 0B40 FE01              movw R30,R28
 0B42 6680              ldd R6,z+6
 0B44 7780              ldd R7,z+7
 0B46 8084              ldd R8,z+8
 0B48 9184              ldd R9,z+9
 0B4A 40E4              ldi R20,64
 0B4C 52E4              ldi R21,66
 0B4E 6FE0              ldi R22,15
 0B50 70E0              ldi R23,0
 0B52 9A92              st -y,R9
 0B54 8A92              st -y,R8
 0B56 7A92              st -y,R7
 0B58 6A92              st -y,R6
 0B5A 8A01              movw R16,R20
 0B5C 9B01              movw R18,R22
 0B5E 0E940000          xcall empy32u
 0B62 3801              movw R6,R16
 0B64 4901              movw R8,R18
 0B66 620C              add R6,R2
 0B68 731C              adc R7,R3
 0B6A 841C              adc R8,R4
 0B6C 951C              adc R9,R5
 0B6E FE01              movw R30,R28
 0B70 2684              ldd R2,z+14
 0B72 3784              ldd R3,z+15
 0B74 4088              ldd R4,z+16
 0B76 5188              ldd R5,z+17
 0B78 40E1              ldi R20,16
 0B7A 57E2              ldi R21,39
 0B7C 60E0              ldi R22,0
 0B7E 70E0              ldi R23,0
 0B80 5A92              st -y,R5
 0B82 4A92              st -y,R4
 0B84 3A92              st -y,R3
 0B86 2A92              st -y,R2
 0B88 8A01              movw R16,R20
 0B8A 9B01              movw R18,R22
 0B8C 0E940000          xcall empy32u
 0B90 600E              add R6,R16
 0B92 711E              adc R7,R17
 0B94 821E              adc R8,R18
 0B96 931E              adc R9,R19
 0B98 FE01              movw R30,R28
 0B9A 2288              ldd R2,z+18
 0B9C 3388              ldd R3,z+19
 0B9E 4488              ldd R4,z+20
 0BA0 5588              ldd R5,z+21
 0BA2 48EE              ldi R20,232
 0BA4 53E0              ldi R21,3
 0BA6 60E0              ldi R22,0
 0BA8 70E0              ldi R23,0
 0BAA 5A92              st -y,R5
 0BAC 4A92              st -y,R4
 0BAE 3A92              st -y,R3
 0BB0 2A92              st -y,R2
 0BB2 8A01              movw R16,R20
 0BB4 9B01              movw R18,R22
 0BB6 0E940000          xcall empy32u
 0BBA 600E              add R6,R16
 0BBC 711E              adc R7,R17
 0BBE 821E              adc R8,R18
 0BC0 931E              adc R9,R19
 0BC2 FE01              movw R30,R28
 0BC4 2688              ldd R2,z+22
 0BC6 3788              ldd R3,z+23
 0BC8 408C              ldd R4,z+24
 0BCA 518C              ldd R5,z+25
 0BCC 44E6              ldi R20,100
 0BCE 50E0              ldi R21,0
 0BD0 60E0              ldi R22,0
 0BD2 70E0              ldi R23,0
 0BD4 5A92              st -y,R5
 0BD6 4A92              st -y,R4
 0BD8 3A92              st -y,R3
 0BDA 2A92              st -y,R2
 0BDC 8A01              movw R16,R20
 0BDE 9B01              movw R18,R22
 0BE0 0E940000          xcall empy32u
 0BE4 600E              add R6,R16
 0BE6 711E              adc R7,R17
 0BE8 821E              adc R8,R18
 0BEA 931E              adc R9,R19
 0BEC FE01              movw R30,R28
 0BEE 228C              ldd R2,z+26
 0BF0 338C              ldd R3,z+27
 0BF2 448C              ldd R4,z+28
 0BF4 558C              ldd R5,z+29
 0BF6 4AE0              ldi R20,10
 0BF8 50E0              ldi R21,0
 0BFA 60E0              ldi R22,0
 0BFC 70E0              ldi R23,0
 0BFE 5A92              st -y,R5
 0C00 4A92              st -y,R4
 0C02 3A92              st -y,R3
 0C04 2A92              st -y,R2
 0C06 8A01              movw R16,R20
 0C08 9B01              movw R18,R22
 0C0A 0E940000          xcall empy32u
 0C0E 600E              add R6,R16
 0C10 711E              adc R7,R17
 0C12 821E              adc R8,R18
 0C14 931E              adc R9,R19
 0C16 FE01              movw R30,R28
 0C18 268C              ldd R2,z+30
 0C1A 378C              ldd R3,z+31
 0C1C 40A0              ldd R4,z+32
 0C1E 51A0              ldd R5,z+33
 0C20 620C              add R6,R2
 0C22 731C              adc R7,R3
 0C24 841C              adc R8,R4
 0C26 951C              adc R9,R5
 0C28 FE01              movw R30,R28
 0C2A 6282              std z+2,R6
 0C2C 7382              std z+3,R7
 0C2E 8482              std z+4,R8
 0C30 9582              std z+5,R9
 0C32                   .dbline 446
 0C32           ;                           Wave_Generate(D,I); 
 0C32 0DA0              ldd R0,y+37
 0C34 0882              std y+0,R0
 0C36 FE01              movw R30,R28
 0C38 0281              ldd R16,z+2
 0C3A 1381              ldd R17,z+3
 0C3C 2481              ldd R18,z+4
 0C3E 3581              ldd R19,z+5
 0C40 4DDB              xcall _Wave_Generate
 0C42                   .dbline 447
 0C42           ;                                       Bcd_Div(D);
 0C42 FE01              movw R30,R28
 0C44 0281              ldd R16,z+2
 0C46 1381              ldd R17,z+3
 0C48 2481              ldd R18,z+4
 0C4A 3581              ldd R19,z+5
 0C4C 7BDC              xcall _Bcd_Div
 0C4E                   .dbline 448
 0C4E           ;                                   Lcd_write_number();
 0C4E 0BDB              xcall _Lcd_write_number
 0C50                   .dbline 449
 0C50           ;                                  }break;
 0C50                   .dbline 449
 0C50 49C0              xjmp L130
 0C52           L145:
 0C52                   .dbline 451
 0C52           ; 
 0C52           ;               case 12:  { 
 0C52                   .dbline 452
 0C52           ;                                       S_ape++;
 0C52 0CA0              ldd R0,y+36
 0C54 0394              inc R0
 0C56 0CA2              std y+36,R0
 0C58                   .dbline 453
 0C58           ;                                       switch(S_ape)
 0C58 E02C              mov R14,R0
 0C5A FF24              clr R15
 0C5C C701              movw R24,R14
 0C5E 8130              cpi R24,1
 0C60 E0E0              ldi R30,0
 0C62 9E07              cpc R25,R30
 0C64 49F0              breq L149
 0C66 8230              cpi R24,2
 0C68 E0E0              ldi R30,0
 0C6A 9E07              cpc R25,R30
 0C6C B9F0              breq L150
 0C6E 8330              cpi R24,3
 0C70 E0E0              ldi R30,0
 0C72 9E07              cpc R25,R30
 0C74 29F1              breq L151
 0C76 36C0              xjmp L130
 0C78           X6:
 0C78                   .dbline 454
 0C78           ;                                       { 
 0C78           L149:
 0C78                   .dbline 455
 0C78           ;                                          case 1: I=1;Wave_Generate(D,I);      LCD_Write_string(0,5,angle);          break;
 0C78 0024              clr R0
 0C7A 0394              inc R0
 0C7C 0DA2              std y+37,R0
 0C7E                   .dbline 455
 0C7E 0882              std y+0,R0
 0C80 FE01              movw R30,R28
 0C82 0281              ldd R16,z+2
 0C84 1381              ldd R17,z+3
 0C86 2481              ldd R18,z+4
 0C88 3581              ldd R19,z+5
 0C8A 28DB              xcall _Wave_Generate
 0C8C                   .dbline 455
 0C8C 80E0              ldi R24,<_angle
 0C8E 90E0              ldi R25,>_angle
 0C90 9983              std y+1,R25
 0C92 8883              std y+0,R24
 0C94 25E0              ldi R18,5
 0C96 0027              clr R16
 0C98 92DA              xcall _LCD_Write_string
 0C9A                   .dbline 455
 0C9A 24C0              xjmp L130
 0C9C           L150:
 0C9C                   .dbline 456
 0C9C           ;                                          case 2: I=2;Wave_Generate(D,I);      LCD_Write_string(0,5,sq1);                    break;
 0C9C 82E0              ldi R24,2
 0C9E 8DA3              std y+37,R24
 0CA0                   .dbline 456
 0CA0 082E              mov R0,R24
 0CA2 0882              std y+0,R0
 0CA4 FE01              movw R30,R28
 0CA6 0281              ldd R16,z+2
 0CA8 1381              ldd R17,z+3
 0CAA 2481              ldd R18,z+4
 0CAC 3581              ldd R19,z+5
 0CAE 16DB              xcall _Wave_Generate
 0CB0                   .dbline 456
 0CB0 80E0              ldi R24,<_sq1
 0CB2 90E0              ldi R25,>_sq1
 0CB4 9983              std y+1,R25
 0CB6 8883              std y+0,R24
 0CB8 25E0              ldi R18,5
 0CBA 0027              clr R16
 0CBC 80DA              xcall _LCD_Write_string
 0CBE                   .dbline 456
 0CBE 12C0              xjmp L130
 0CC0           L151:
 0CC0                   .dbline 457
 0CC0           ;                                  case 3: I=0;Wave_Generate(D,I);  LCD_Write_string(0,5,sin); S_ape=0;   break;
 0CC0 0024              clr R0
 0CC2 0DA2              std y+37,R0
 0CC4                   .dbline 457
 0CC4 0882              std y+0,R0
 0CC6 FE01              movw R30,R28
 0CC8 0281              ldd R16,z+2
 0CCA 1381              ldd R17,z+3
 0CCC 2481              ldd R18,z+4
 0CCE 3581              ldd R19,z+5
 0CD0 05DB              xcall _Wave_Generate
 0CD2                   .dbline 457
 0CD2 80E0              ldi R24,<_sin
 0CD4 90E0              ldi R25,>_sin
 0CD6 9983              std y+1,R25
 0CD8 8883              std y+0,R24
 0CDA 25E0              ldi R18,5
 0CDC 0027              clr R16
 0CDE 6FDA              xcall _LCD_Write_string
 0CE0                   .dbline 457
 0CE0 0024              clr R0
 0CE2 0CA2              std y+36,R0
 0CE4                   .dbline 457
 0CE4                   .dbline 459
 0CE4           ;                                       }
 0CE4           ;                          }    break;
 0CE4                   .dbline 459
 0CE4                   .dbline 461
 0CE4           ; 
 0CE4           ;               case 13:  {     
 0CE4                   .dbline 463
 0CE4           ;                         
 0CE4           ;                                 }     break;
 0CE4                   .dbline 463
 0CE4                   .dbline 465
 0CE4           ; 
 0CE4           ;               case 14:  { 
 0CE4                   .dbline 467
 0CE4           ;                           
 0CE4           ;                                 }     break;
 0CE4                   .dbline 467
 0CE4                   .dbline 469
 0CE4           ; 
 0CE4           ;               case 15:  {  
 0CE4                   .dbline 471
 0CE4           ;                            
 0CE4           ;                                 }  break;
 0CE4                   .dbline 471
 0CE4                   .dbline 473
 0CE4           ;                                                        
 0CE4           ;               default:break;             
 0CE4           L130:
 0CE4                   .dbline 475
 0CE4           ;           }
 0CE4           ;        }//END if
 0CE4           L127:
 0CE4                   .dbline 476
 0CE4           L125:
 0CE4                   .dbline 404
 0CE4 03CE              xjmp L124
 0CE6           X7:
 0CE6                   .dbline -2
 0CE6           L123:
 0CE6 A696              adiw R28,38
 0CE8                   .dbline 0 ; func end
 0CE8 0895              ret
 0CEA                   .dbsym l I 37 c
 0CEA                   .dbsym l C 30 l
 0CEA                   .dbsym l B 26 l
 0CEA                   .dbsym l A 22 l
 0CEA                   .dbsym l K 18 l
 0CEA                   .dbsym l Z 14 l
 0CEA                   .dbsym l Y 10 l
 0CEA                   .dbsym l X 6 l
 0CEA                   .dbsym l S_ape 36 c
 0CEA                   .dbsym l M 35 c
 0CEA                   .dbsym l D 2 l
 0CEA                   .dbsym l U 34 c
 0CEA                   .dbend
                        .area lit(rom, con, rel)
 0444           L79:
 0444 0000004F          .word 0x0,0x4f00
 0448           L78:
 0448 00000040          .word 0x0,0x4000
 044C           L77:
 044C 14AE2B41          .word 0xae14,0x412b
