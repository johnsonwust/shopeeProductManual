__start:
__text_start:
      2A E5CF      LDI	R28,0x5F
      2B E0D4      LDI	R29,4
      2C BFCD      OUT	0x3D,R28
      2D BFDE      OUT	0x3E,R29
      2E 51CE      SUBI	R28,0x1E
      2F 40D0      SBCI	R29,0
      30 EA0A      LDI	R16,0xAA
      31 8308      STD	Y+0,R16
      32 2400      CLR	R0
      33 E6E0      LDI	R30,0x60
      34 E0F0      LDI	R31,0
      35 E010      LDI	R17,0
      36 36E0      CPI	R30,0x60
      37 07F1      CPC	R31,R17
      38 F011      BEQ	0x003B
      39 9201      ST	R0,Z+
      3A CFFB      RJMP	0x0036
      3B 8300      STD	Z+0,R16
      3C E5E4      LDI	R30,0x54
      3D E0F0      LDI	R31,0
      3E E6A0      LDI	R26,0x60
      3F E0B0      LDI	R27,0
      40 E010      LDI	R17,0
      41 E000      LDI	R16,0
      42 BF0B      OUT	0x3B,R16
      43 35E4      CPI	R30,0x54
      44 07F1      CPC	R31,R17
      45 F021      BEQ	0x004A
      46 95C8      LPM
      47 9631      ADIW	R30,1
      48 920D      ST	R0,X+
      49 CFF9      RJMP	0x0043
      4A 940E 0060 CALL	_main
_exit:
      4C CFFF      RJMP	_exit
FILE: D:\工作\制版成功\YL-60A~2\YL-60A~2\4.相关例程\5.按键key\key.c
(0001) 
(0002) /******************************************************************************/
(0003) /*【编写时间】： 2011.07.07
(0004) * 【作    者】： 雁翎电子
(0005) * 【版    本】： V1.0
(0006) * 【网    站】： http://ylelectronic.taobao.com/ 
(0007) * 【Q      Q】： 348439350
(0008) * 【编译环境】： ICCAVR  
(0009) * 【函数功能】： K5 k6 控制LED灯闪烁 	
(0010) * 【晶    振】:  8M		
(0011) * 【芯    片】:  ATMEGA16A	 
(0012) * 【硬件连接】： J1短路帽接上  
(0013) /******************************************************************************/  
(0014)    #define uchar unsigned char 
(0015)    #define uint unsigned int 
(0016)    #include<iom16v.h>
(0017)     #define Set_Bit(val, bitn)    (val |=(1<<(bitn))) 
(0018)       #define Clr_Bit(val, bitn)    (val&=~(1<<(bitn))) 
(0019)       #define Get_Bit(val, bitn)    (val &(1<<(bitn)) ) 
(0020)   void delayms(void)	 // 延时子程序       
(0021)           {						
(0022) 	         unsigned int i,j;
(0023) 			 for(i=0;i<255;i++)
_delayms:
  i                    --> R16
  j                    --> R18
      4D 2700      CLR	R16
      4E 2711      CLR	R17
      4F C00B      RJMP	0x005B
(0024) 			    for(j=0;j<1000;j++);
      50 2722      CLR	R18
      51 2733      CLR	R19
      52 C002      RJMP	0x0055
      53 5F2F      SUBI	R18,0xFF
      54 4F3F      SBCI	R19,0xFF
      55 3E28      CPI	R18,0xE8
      56 E0E3      LDI	R30,3
      57 073E      CPC	R19,R30
      58 F3D0      BCS	0x0053
      59 5F0F      SUBI	R16,0xFF
      5A 4F1F      SBCI	R17,0xFF
      5B 3F0F      CPI	R16,0xFF
      5C E0E0      LDI	R30,0
      5D 071E      CPC	R17,R30
      5E F388      BCS	0x0050
      5F 9508      RET
(0025)           }
(0026) 
(0027)   void main(void)
(0028)   {
(0029)      
(0030)     //端口初始化
(0031)      DDRD=0xf0;      //D口高四位输出 低四位输入
_main:
      60 EF80      LDI	R24,0xF0
      61 BB81      OUT	0x11,R24
(0032)      PORTD=0xff;
      62 EF8F      LDI	R24,0xFF
      63 BB82      OUT	0x12,R24
(0033) 	 
(0034) 	 
(0035)      DDRA=0x00;      //A口为输入
      64 2422      CLR	R2
      65 BA2A      OUT	0x1A,R2
(0036)      PORTA=0xff;
      66 BB8B      OUT	0x1B,R24
      67 C04C      RJMP	0x00B4
(0037)    
(0038)      while(1)
(0039)      {
(0040)         if(Get_Bit(PINA,5)==0)    //PA4 按键处理函数        
      68 99CD      SBIC	0x19,5
      69 C008      RJMP	0x0072
(0041) 	    {  
      6A C005      RJMP	0x0070
(0042) 		  while(!(Get_Bit(PINA,5)))//等待按键松开
(0043)            { 
(0044) 				PORTD=0x0F;
      6B E08F      LDI	R24,0xF
      6C BB82      OUT	0x12,R24
(0045) 				delayms();
      6D DFDF      RCALL	_delayms
(0046) 				PORTD=0xff;
      6E EF8F      LDI	R24,0xFF
      6F BB82      OUT	0x12,R24
      70 9BCD      SBIS	0x19,5
      71 CFF9      RJMP	0x006B
(0047) 				
(0048) 				
(0049)            }		   
(0050) 		   	   
(0051) 	   }
(0052) 	   
(0053) 	   if(Get_Bit(PINA,4)==0)    //PA4 按键处理函数        
      72 99CC      SBIC	0x19,4
      73 C00E      RJMP	0x0082
(0054) 	    {  
      74 C00B      RJMP	0x0080
(0055) 		  while(!(Get_Bit(PINA,4)))//等待按键松开
(0056)            { 
(0057) 				PORTD=0x0F;
      75 E08F      LDI	R24,0xF
      76 BB82      OUT	0x12,R24
(0058) 				delayms();
      77 DFD5      RCALL	_delayms
(0059) 				PORTD=0xff;
      78 EF8F      LDI	R24,0xFF
      79 BB82      OUT	0x12,R24
(0060) 				delayms();
      7A DFD2      RCALL	_delayms
(0061) 				PORTD=0x0F;
      7B E08F      LDI	R24,0xF
      7C BB82      OUT	0x12,R24
(0062) 				delayms();
      7D DFCF      RCALL	_delayms
(0063) 				PORTD=0xff;	
      7E EF8F      LDI	R24,0xFF
      7F BB82      OUT	0x12,R24
      80 9BCC      SBIS	0x19,4
      81 CFF3      RJMP	0x0075
(0064) 				
(0065)            }
(0066) 		 }	
(0067) 		
(0068) 		if(Get_Bit(PIND,3)==0)    //PA4 按键处理函数        
      82 9983      SBIC	0x10,3
      83 C014      RJMP	0x0098
(0069) 	    {  
      84 C011      RJMP	0x0096
(0070) 		  while(!(Get_Bit(PIND,3)))//等待按键松开
(0071)            { 
(0072) 				PORTD=0x0F;
      85 E08F      LDI	R24,0xF
      86 BB82      OUT	0x12,R24
(0073) 				delayms();
      87 DFC5      RCALL	_delayms
(0074) 				PORTD=0xff;
      88 EF8F      LDI	R24,0xFF
      89 BB82      OUT	0x12,R24
(0075) 				delayms();
      8A DFC2      RCALL	_delayms
(0076) 				PORTD=0x0F;
      8B E08F      LDI	R24,0xF
      8C BB82      OUT	0x12,R24
(0077) 				delayms();
      8D DFBF      RCALL	_delayms
(0078) 				PORTD=0xff;	
      8E EF8F      LDI	R24,0xFF
      8F BB82      OUT	0x12,R24
(0079) 				delayms();
      90 DFBC      RCALL	_delayms
(0080) 				PORTD=0x0F;	
      91 E08F      LDI	R24,0xF
      92 BB82      OUT	0x12,R24
(0081) 				delayms();
      93 DFB9      RCALL	_delayms
(0082) 				PORTD=0xff;	
      94 EF8F      LDI	R24,0xFF
      95 BB82      OUT	0x12,R24
      96 9B83      SBIS	0x10,3
      97 CFED      RJMP	0x0085
(0083)            }
(0084) 		 }	 
(0085) 		
(0086) 		if(Get_Bit(PIND,2)==0)    //PA4 按键处理函数        
      98 9982      SBIC	0x10,2
      99 C01A      RJMP	0x00B4
(0087) 	    {  
      9A C017      RJMP	0x00B2
(0088) 		  while(!(Get_Bit(PIND,2)))//等待按键松开
(0089)            { 
(0090) 				PORTD=0x0F;
      9B E08F      LDI	R24,0xF
      9C BB82      OUT	0x12,R24
(0091) 				delayms();
      9D DFAF      RCALL	_delayms
(0092) 				PORTD=0xff;
      9E EF8F      LDI	R24,0xFF
      9F BB82      OUT	0x12,R24
(0093) 				delayms();
      A0 DFAC      RCALL	_delayms
(0094) 				PORTD=0x0F;
      A1 E08F      LDI	R24,0xF
      A2 BB82      OUT	0x12,R24
(0095) 				delayms();
      A3 DFA9      RCALL	_delayms
(0096) 				PORTD=0xff;	
      A4 EF8F      LDI	R24,0xFF
      A5 BB82      OUT	0x12,R24
(0097) 				delayms();
      A6 DFA6      RCALL	_delayms
(0098) 				PORTD=0x0F;	
      A7 E08F      LDI	R24,0xF
      A8 BB82      OUT	0x12,R24
(0099) 				delayms();
      A9 DFA3      RCALL	_delayms
(0100) 				PORTD=0xff;	
      AA EF8F      LDI	R24,0xFF
      AB BB82      OUT	0x12,R24
(0101) 				delayms();
      AC DFA0      RCALL	_delayms
(0102) 				PORTD=0x0F;	
      AD E08F      LDI	R24,0xF
      AE BB82      OUT	0x12,R24
(0103) 				delayms();
      AF DF9D      RCALL	_delayms
(0104) 				PORTD=0xff;	
FILE: <library>
      B0 EF8F      LDI	R24,0xFF
      B1 BB82      OUT	0x12,R24
      B2 9B82      SBIS	0x10,2
      B3 CFE7      RJMP	0x009B
      B4 CFB3      RJMP	0x0068
      B5 9508      RET
