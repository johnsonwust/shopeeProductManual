/******************************************************************************/
/*  Name:  LCD12864(St7920/St7921) 电位器R18调节输入电压                      */
/*  内部2。56基准源 跳线J1 向左                                               */
/*  Designed by :廖文丹                         Date:2007/6/21                */
/*  开发环境:ICCAVR                                                           */
/*  QQ:80184985 真红炎神                                                      */
/******************************************************************************/
#include <iom16v.h>
#include <macros.h>
#define Set_Bit(val, bitn)    (val |=(1<<(bitn))) 
#define Clr_Bit(val, bitn)    (val&=~(1<<(bitn))) 
#define N 15
//12864
void Write_char(unsigned char start, unsigned char ddata);
void Send_byte(unsigned char bbyte);
void Delaynms(unsigned int di);
void Lcd_init(void);
void Disp_img(unsigned char const *img);
//unsigned char flag;
unsigned int value;
unsigned char k=0;
unsigned int sum_adc[N]={0};
unsigned char  num[]=    {"0123456789_:.V"};
unsigned char  welcome[]={"通道2:"};
unsigned char  input[]  ={"通道1:"};
/**************************************************************/
 const unsigned  char logo[]={  
/*--  调入了一幅图像：C:\Documents and Settings\lwd\桌面\AVR程序\AVR_12864_串行\b01.bmp  --*/
/*--  宽度x高度=127x63  --*/
/*--  宽度不是8的倍数，现调整为：宽度x高度=128x63  --*/
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0xF3,0xE0,0x0F,0x8F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0xF3,0xF0,0x0F,0x8F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x07,0xF9,0xF0,0x0F,0x9F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x07,0xF9,0xF8,0x1F,0x9F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x07,0xF9,0xF8,0x1F,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x0F,0xFC,0xF8,0x1F,0x3F,0x1F,0x80,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFC,0x00,
0x00,0x0F,0xFC,0xFC,0x3F,0x3F,0x1F,0x80,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x00,
0x00,0x0F,0xFC,0x7C,0x3E,0x3E,0x1F,0x80,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x00,
0x00,0x1F,0xFE,0x7C,0x7E,0x7E,0x3F,0x00,0x20,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,
0x00,0x1F,0xBE,0x7E,0x7E,0x7E,0xFF,0x00,0x70,0x00,0x00,0x0D,0xBF,0xDF,0xB0,0x00,
0x00,0x1F,0x3E,0x3E,0x7C,0x7F,0xFF,0x00,0x70,0x00,0x00,0x1D,0xFF,0xDF,0xB0,0x00,
0x00,0x3F,0x3F,0x3E,0x7C,0xFF,0xFE,0x00,0x70,0x00,0x00,0x1D,0xFF,0xD8,0x30,0x00,
0x00,0x3F,0x1F,0x3F,0xFC,0xFF,0xFC,0x00,0x60,0x00,0x00,0x3D,0xF6,0xD8,0x30,0x00,
0x00,0x3F,0x1F,0x9F,0xF8,0xFF,0xF0,0x00,0xE0,0x00,0x00,0x3D,0xF6,0xDF,0xB0,0x00,
0x00,0x3F,0xFF,0x9F,0xF9,0xFF,0xE0,0x00,0xC0,0x00,0x00,0x7D,0xF6,0xDF,0xB0,0x00,
0x00,0x7F,0xFF,0x9F,0xF9,0xFB,0xE0,0x00,0x40,0x00,0x00,0xED,0xF6,0xD8,0x30,0x00,
0x00,0x7F,0xFF,0xCF,0xF1,0xF3,0xF0,0x00,0x40,0x00,0x00,0xED,0xF6,0xD8,0x30,0x00,
0x00,0x7F,0xFF,0xCF,0xF3,0xF3,0xF0,0x00,0x40,0x00,0x00,0xED,0xF6,0xDF,0xB0,0x00,
0x00,0xFF,0xFF,0xCF,0xF3,0xF1,0xF0,0x00,0x60,0x00,0x01,0xFF,0xFF,0xFF,0xFE,0x00,
0x00,0xF8,0x07,0xE7,0xE3,0xE1,0xF0,0x08,0x20,0x1E,0x01,0xFF,0xFF,0xFF,0xFE,0x00,
0x00,0xF8,0x03,0xE7,0xE7,0xE1,0xF8,0xFF,0x3C,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0xF8,0x03,0xE3,0xE7,0xE1,0xF9,0xFF,0xFF,0xF7,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0xF0,0x01,0xE3,0xC7,0xC0,0xF9,0xE0,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0xC0,0x00,0x00,0x80,0x7C,0xFC,0xC0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,0x7F,0xFC,0xF0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x27,0xFF,0xB0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x37,0xFF,0x10,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x1C,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x0C,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xDF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xBF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x01,0xF8,0x3C,0x00,0xCC,0x00,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1F,0x6C,0x37,0xF1,0x8C,0x00,0x00,0xE7,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x60,0x6F,0x37,0xFF,0x80,0x00,0xCF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1F,0xFE,0x6C,0x36,0x79,0x80,0x00,0xEE,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x60,0xEC,0x36,0x71,0x80,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0xEC,0x6C,0x36,0x79,0x80,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x07,0xF8,0x6C,0x37,0xED,0x80,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1F,0x30,0x6C,0x36,0x6D,0x80,0x00,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x76,0x6C,0x36,0x61,0x80,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0xDE,0x6C,0x37,0xE1,0x80,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x0F,0x0E,0x6C,0xF6,0x6F,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

/******************************************************************************/
void Lcd_init(void)	//初始化LCD 
{
	Delaynms(20); //启动等待，等LCM讲入工作状态
	Set_Bit(PORTA,0);
  	Write_char(0,0x30);  //8 位介面，基本指令集
	Delaynms(20);
  	Write_char(0,0x0c);  //显示打开，光标关，反白关
	Delaynms(20);
  	Write_char(0,0x01);  //清屏，将DDRAM的地址计数器归零  
	Delaynms(20);
}

/******************************************************************************/
void Write_char(unsigned char start, unsigned char ddata) //写指令或数据
{
	unsigned char start_data,Hdata,Ldata;
  	if(start==0) 
		start_data=0xf8;	 //写指令
    else    
    	start_data=0xfa;  //写数据
  
  	Hdata=ddata&0xf0;		  //取高四位
  	Ldata=(ddata<<4)&0xf0;  //取低四位
  	Send_byte(start_data);	  //发送起始信号
  	Delaynms(20); //延时是必须的
  	Send_byte(Hdata);	      //发送高四位
  	Delaynms(20);  //延时是必须的
  	Send_byte(Ldata);		  //发送低四位
  	Delaynms(20);  //延时是必须的
}
/******************************************************************************/
void Send_byte(unsigned char bbyte) //发送一个字节
{
	unsigned char i,j;
 	for(i=0;i<8;i++)
   	{    
   		j=bbyte&0x80; //取出最高位
 		if(j)
			Set_Bit(PORTA,1);
		else
			Clr_Bit(PORTA,1);
		Set_Bit(PORTA,2);
		//Delaynms(1);
		Clr_Bit(PORTA,2);
   		bbyte<<=1; //左移
   	}  
}

/******************************************************************************/
void Delaynms(unsigned int di) //延时
{
	unsigned int da,db;
 	for(da=0;da<di;da++)
   		for(db=0;db<10;db++);
}
/****************************************************************************/
void Disp_img(unsigned char const *img )	//图形方式12864显示字模221 横向取膜
{ 
	unsigned char i,j;
	unsigned int k = 0;
    Delaynms(100);//延时好重要!!!!!!AVR太快了
	Write_char(0,0x36); //图形方式
	Delaynms(100);//延时好重要!!!!!!AVR太快了
	for(i=0;i<32;i++)
  	{ 
		Write_char(0,0x80+i); //列
		Write_char(0,0x80);	  //行
    	for(j=0;j<16;j++) 
		{
			Write_char(1,img[k++]);
		}
  	}

 	for(i=0;i<32;i++)
  	{ 
		Write_char(0,0x80+i);
		Write_char(0,0x88);
    	for(j=0;j<16;j++) 
		{
			Write_char(1,img[k++]);
  		}
	}
}

/******************************************************************************/
void Clr_Scr(void)//清屏函数
{
	Write_char(0,0x01);
}

/******************************************************************************/
void LCD_set_xy( unsigned char x, unsigned char y )
{	//设置LCD显示的起始位置，X为行，Y为列
    unsigned char address;
	switch(x)
	{
		case 0: address = 0x80 + y; break;    
    	case 1: address = 0x80 + y; break; 
		case 2: address = 0x90 + y; break; 
   	 	case 3: address = 0x88 + y; break;
		case 4: address = 0x98 + y; break; 
		default:address = 0x80 + y; break;
	}
	//Delaynms(100);//延时好重要!!!!!!AVR太快了
    Write_char(0, address);
	//Delaynms(100);//延时好重要!!!!!!AVR太快了
}
/******************************************************************************/
void LCD_Write_string( unsigned char X, unsigned char Y, unsigned char *s)
{	//	中英文字符串显示函数
	LCD_set_xy( X, Y );   
    while (*s) 
    {
		Write_char( 1, *s );
	    s ++;
		Delaynms(100);
	}
}
/*******************************************************************************/
void LCD_Write_number(unsigned char s)//	数字显示函数
{	
	Write_char(1,num[s]);
}
/******************************************************************************/
void Lcd_Mark2(void)
{
	Clr_Scr();//清屏
	Delaynms(20);
	LCD_Write_string(1,0,welcome);//
	LCD_Write_string(2,0,input);
	LCD_Write_string(2,0,input);
}
/******************************************************************************/
void main(void)//主函数
{
    unsigned int i,j;
    unsigned char disbuf[4]={0,0,0,0};
	 
	DDRA|=1<<0|1<<1|1<<2|0<<7;//设置PA0,PA1,PA2为输出,PA7为输入
	PORTA=0x00;
	
	DDRC|=1<<0;//设置PC0为输出
	PORTC=0x00;

	DDRD|=1<<0;
	PORTD=0x00;
	
	Lcd_init();//设置液晶显示器
	Clr_Scr();//清屏	
	Disp_img(logo);	//显示我们的AVR
	Delaynms(2000);//显示画面等待时间
    Lcd_init();
	Lcd_Mark2();	
	ADCSRA=0X00;    
    ADMUX =(1<<REFS0)|(1<<REFS1)|(0<<MUX0)|(0<<MUX1)|(0<<MUX2)|(0<<MUX3)|(0<<MUX4); //采用内部5参考电压，ADC0输入
    ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1) ;//ADC转换 64分频
	SEI();
    while(1);
	
		
} //ENDmain

 unsigned int ADC_Convert(void)
{   
	 unsigned int temp1,temp2;
	 temp1=(unsigned int)ADCL;
	 temp2=(unsigned int)ADCH;
	 temp2=(temp2<<8)+temp1;
	 return(temp2);
}

/*=======================
unsigned int ADC_Volut(void)
{
	 unsigned long c,d;
	
	c=ADC_Convert();
	 //c=filter();
	 d=(25100* c)/1023; 
	 //d=(25000/1023)*c;
	 return(d); 

}  
***********************/
#pragma interrupt_handler adc_isr:iv_ADC 
void adc_isr(void)
{
    unsigned  long int i;
	unsigned char disbuf[5]={0,0,0,0,0};
	unsigned char f;
	unsigned long sum_aver_adc=0;
	//flag=~flag;
	//if(flag==0)
	//{
    ADMUX =(1<<REFS0)|(1<<REFS1)|(1<<MUX0)|(1<<MUX1)|(1<<MUX2)|(0<<MUX3)|(0<<MUX4);//内部2.56基准，PA7 AD输入
    ADCSRA|=(1<<ADSC);//启动AD转换
	//}
	//else
	//{
	//ADMUX =(1<<REFS0)|(1<<REFS1)|(1<<MUX0)|(0<<MUX1)|(0<<MUX2)|(0<<MUX3);
    //ADCSRA|=(1<<ADSC);//启动AD转换
	//}
	// j=ADC_Volut();
	 sum_adc[k]=ADC_Convert();     
	 k++;
	 if(k>=N)
  {
	 k=0;
	 for(f=0;f<N;f++)
	  {
      sum_aver_adc=sum_aver_adc+sum_adc[f];  //总的加起来
	  }
	  sum_aver_adc=(sum_aver_adc/N);         //除下，算平均
	  i=(26000* sum_aver_adc)/1023;          //算出电压
	  
	  disbuf[4]=i/10000;
      i=i%10000;
      disbuf[3]=i/1000;
      i=i%1000;
      disbuf[2]=i/100;
      i=i%100;
	  disbuf[1]=i/10;
	  i=i%10;
	  disbuf[0]=i;
	  Set_Bit(PORTD,0);
      Delaynms(5000);
      Clr_Bit(PORTD,0);
      Delaynms(5000);
   //{
    //if(flag==0)
	//{
    LCD_set_xy(2,5);LCD_Write_number(disbuf[4]);LCD_Write_number(12);
    LCD_set_xy(2,6);LCD_Write_number(disbuf[3]);LCD_Write_number(disbuf[2]);
	LCD_set_xy(2,7);LCD_Write_number(disbuf[1]);LCD_Write_number(disbuf[0]);
	//}
	//else
	//{
	//LCD_set_xy(1,5);LCD_Write_number(disbuf[4]);LCD_Write_number(12);
    //LCD_set_xy(1,6);LCD_Write_number(disbuf[3]);LCD_Write_number(disbuf[2]);
	//LCD_set_xy(1,7);LCD_Write_number(disbuf[1]);LCD_Write_number(disbuf[0]);
	//}
   //}
 // }//end else
  }
	 //i=ADC_Volut();        
}//end void 
