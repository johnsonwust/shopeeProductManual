                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
                        .area data(ram, con, rel)
 0000                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0000           _disbuf::
 0000                   .blkb 2
                        .area idata
 0000 0000              .byte 0,0
                        .area data(ram, con, rel)
 0002                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0002                   .blkb 2
                        .area idata
 0002 0000              .byte 0,0
                        .area data(ram, con, rel)
 0004                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0004                   .dbsym e disbuf _disbuf A[4:4]c
 0004           _discode::
 0004                   .blkb 2
                        .area idata
 0004 C0F9              .byte 192,249
                        .area data(ram, con, rel)
 0006                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0006                   .blkb 2
                        .area idata
 0006 A4B0              .byte 164,176
                        .area data(ram, con, rel)
 0008                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0008                   .blkb 2
                        .area idata
 0008 9992              .byte 153,146
                        .area data(ram, con, rel)
 000A                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 000A                   .blkb 2
                        .area idata
 000A 82F8              .byte 130,248
                        .area data(ram, con, rel)
 000C                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 000C                   .blkb 2
                        .area idata
 000C 8090              .byte 128,144
                        .area data(ram, con, rel)
 000E                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 000E                   .blkb 1
                        .area idata
 000E FF                .byte 255
                        .area data(ram, con, rel)
 000F                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 000F                   .dbsym e discode _discode A[11:11]c
 000F           _disbit::
 000F                   .blkb 2
                        .area idata
 000F FEFD              .byte 254,253
                        .area data(ram, con, rel)
 0011                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0011                   .blkb 2
                        .area idata
 0011 FBF7              .byte 251,247
                        .area data(ram, con, rel)
 0013                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0013                   .dbsym e disbit _disbit A[4:4]c
                        .area text(rom, con, rel)
 0000                   .dbfile E:\单片机\开发板专用文件夹\MEGA16开发板资料\4.相关例程\18.上电读EEprom实现上电数码管加1\main.c
 0000                   .dbfunc e delayms _delayms fV
 0000           ;              j -> R20,R21
 0000           ;              K -> R16
                        .even
 0000           _delayms::
 0000 4A93              st -y,R20
 0002 5A93              st -y,R21
 0004                   .dbline -1
 0004                   .dbline 28
 0004           ; /******************************************************************************/
 0004           ; /*  Name: 数码管每次上电都加1                                                 */
 0004           ; /*  编译坏境：ICCAVR 7.16                                                     */
 0004           ; /*  Designed by :廖文丹                         Date:2007/6/21                */
 0004           ; /*  开发环境:ICCAVR                                                           */
 0004           ; /*  QQ:80184985 真红炎神                                                      */     
 0004           ; /******************************************************************************/   
 0004           ;         #define uchar unsigned char
 0004           ;         #define uint  unsigned int
 0004           ;         #define Set_Bit(val, bitn)    (val |=(1<<(bitn))) 
 0004           ;       #define Clr_Bit(val, bitn)    (val&=~(1<<(bitn))) 
 0004           ;       #define Get_Bit(val, bitn)    (val &(1<<(bitn)) ) 
 0004           ;       #include <iom16v.h>
 0004           ;       uchar  disbuf[4]={0,0,0,0};  
 0004           ;       uchar  discode[]={ 0xC0, 0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xff};  //段码表
 0004           ;       uchar  disbit[4]  ={ 0xFE, 0xFD,0xFB,0xF7}; //选通值   
 0004           ; /******************************************************************************/
 0004           ; //函数声明
 0004           ; /******************************************************************************/                
 0004           ;         void delay(uchar k);
 0004           ;         void Display(void); 
 0004           ;         void Write_EEprom(uchar Data,uint address);//写入AVR单片机内部EERPOM函数
 0004           ;         uchar Read_EEprom (uint address);          //读出AVR单片机内部EERPOM函数   
 0004           ; /******************************************************************************/
 0004           ; //延时函数
 0004           ; /******************************************************************************/                                                                                                              
 0004           ;       void delayms(uchar K)
 0004           ;            {
 0004                   .dbline 30
 0004           ;                   uint j;
 0004           ;                   for(;K!=0;K--)
 0004 09C0              xjmp L5
 0006           L2:
 0006                   .dbline 31
 0006           ;                        for(j=1000;j!=0;j--);  
 0006 48EE              ldi R20,1000
 0008 53E0              ldi R21,3
 000A 02C0              xjmp L9
 000C           L6:
 000C                   .dbline 31
 000C           L7:
 000C                   .dbline 31
 000C 4150              subi R20,1
 000E 5040              sbci R21,0
 0010           L9:
 0010                   .dbline 31
 0010 4030              cpi R20,0
 0012 4507              cpc R20,R21
 0014 D9F7              brne L6
 0016           X0:
 0016           L3:
 0016                   .dbline 30
 0016 0A95              dec R16
 0018           L5:
 0018                   .dbline 30
 0018 0023              tst R16
 001A A9F7              brne L2
 001C           X1:
 001C                   .dbline -2
 001C           L1:
 001C                   .dbline 0 ; func end
 001C 5991              ld R21,y+
 001E 4991              ld R20,y+
 0020 0895              ret
 0022                   .dbsym r j 20 i
 0022                   .dbsym r K 16 c
 0022                   .dbend
 0022                   .dbfunc e Display _Display fV
 0022           ;              i -> R20
                        .even
 0022           _Display::
 0022 4A93              st -y,R20
 0024                   .dbline -1
 0024                   .dbline 37
 0024           ;            }
 0024           ; /******************************************************************************/
 0024           ; //显示函数
 0024           ; /******************************************************************************/                    
 0024           ;         void Display(void)
 0024           ;          {  
 0024                   .dbline 39
 0024           ;                   uchar i;
 0024           ;             for(i=0;i<4;i++)
 0024 4427              clr R20
 0026 1BC0              xjmp L14
 0028           L11:
 0028                   .dbline 40
 0028           ;                 {
 0028                   .dbline 41
 0028           ;                        PORTB=discode[disbuf[i]];
 0028 80E0              ldi R24,<_disbuf
 002A 90E0              ldi R25,>_disbuf
 002C E42F              mov R30,R20
 002E FF27              clr R31
 0030 E80F              add R30,R24
 0032 F91F              adc R31,R25
 0034 E081              ldd R30,z+0
 0036 FF27              clr R31
 0038 80E0              ldi R24,<_discode
 003A 90E0              ldi R25,>_discode
 003C E80F              add R30,R24
 003E F91F              adc R31,R25
 0040 2080              ldd R2,z+0
 0042 28BA              out 0x18,R2
 0044                   .dbline 42
 0044           ;                  PORTA=disbit[i];
 0044 80E0              ldi R24,<_disbit
 0046 90E0              ldi R25,>_disbit
 0048 E42F              mov R30,R20
 004A FF27              clr R31
 004C E80F              add R30,R24
 004E F91F              adc R31,R25
 0050 2080              ldd R2,z+0
 0052 2BBA              out 0x1b,R2
 0054                   .dbline 43
 0054           ;                  delayms(1);
 0054 01E0              ldi R16,1
 0056 D4DF              xcall _delayms
 0058                   .dbline 44
 0058           ;                  PORTA=0xff;
 0058 8FEF              ldi R24,255
 005A 8BBB              out 0x1b,R24
 005C                   .dbline 45
 005C           ;                           } 
 005C           L12:
 005C                   .dbline 39
 005C 4395              inc R20
 005E           L14:
 005E                   .dbline 39
 005E 4430              cpi R20,4
 0060 18F3              brlo L11
 0062           X2:
 0062                   .dbline -2
 0062           L10:
 0062                   .dbline 0 ; func end
 0062 4991              ld R20,y+
 0064 0895              ret
 0066                   .dbsym r i 20 c
 0066                   .dbend
 0066                   .dbfunc e Read_EEprom _Read_EEprom fc
 0066           ;              j -> R10
 0066           ;        address -> R20,R21
                        .even
 0066           _Read_EEprom::
 0066 0E940000          xcall push_xgset300C
 006A A801              movw R20,R16
 006C                   .dbline -1
 006C                   .dbline 51
 006C           ;                }
 006C           ; /******************************************************************************/
 006C           ; //读内部EEPROM函数
 006C           ; /******************************************************************************/                               
 006C           ;       uchar Read_EEprom(uint address)
 006C           ;            {
 006C                   .dbline 53
 006C           ;                 uchar j;
 006C           ;                 if(EECR&0x01)delayms(32);
 006C E09B              sbis 0x1c,0
 006E 02C0              rjmp L16
 0070           X3:
 0070                   .dbline 53
 0070 00E2              ldi R16,32
 0072 C6DF              xcall _delayms
 0074           L16:
 0074                   .dbline 54
 0074           ;                 EEARH=address>>8;
 0074 1A01              movw R2,R20
 0076 232C              mov R2,R3
 0078 3324              clr R3
 007A 2FBA              out 0x1f,R2
 007C                   .dbline 55
 007C           ;                 EEARL=address&0x00ff;
 007C CA01              movw R24,R20
 007E 9070              andi R25,0
 0080 8EBB              out 0x1e,R24
 0082                   .dbline 56
 0082           ;                 EECR=EECR|0x01;
 0082 E09A              sbi 0x1c,0
 0084                   .dbline 57
 0084           ;                 delayms(32);
 0084 00E2              ldi R16,32
 0086 BCDF              xcall _delayms
 0088                   .dbline 58
 0088           ;                 j=EEDR;
 0088 ADB2              in R10,0x1d
 008A                   .dbline 59
 008A           ;                 return(j);
 008A 0A2D              mov R16,R10
 008C                   .dbline -2
 008C           L15:
 008C                   .dbline 0 ; func end
 008C 0C940000          xjmp pop_xgset300C
 0090                   .dbsym r j 10 c
 0090                   .dbsym r address 20 i
 0090                   .dbend
 0090                   .dbfunc e Write_EEprom _Write_EEprom fV
 0090           ;        address -> R20,R21
 0090           ;           data -> R10
                        .even
 0090           _Write_EEprom::
 0090 0E940000          xcall push_xgset300C
 0094 A901              movw R20,R18
 0096 A02E              mov R10,R16
 0098                   .dbline -1
 0098                   .dbline 65
 0098           ;                 }
 0098           ; /******************************************************************************/
 0098           ; //写入EEPORM函数
 0098           ; /******************************************************************************/                                
 0098           ;        void Write_EEprom(uchar data,uint address)
 0098           ;            {
 0098                   .dbline 66
 0098           ;                 if(EECR&0x20)delayms(32);
 0098 E59B              sbis 0x1c,5
 009A 02C0              rjmp L19
 009C           X4:
 009C                   .dbline 66
 009C 00E2              ldi R16,32
 009E B0DF              xcall _delayms
 00A0           L19:
 00A0                   .dbline 67
 00A0           ;                 EEARH=address>>8;
 00A0 1A01              movw R2,R20
 00A2 232C              mov R2,R3
 00A4 3324              clr R3
 00A6 2FBA              out 0x1f,R2
 00A8                   .dbline 68
 00A8           ;                 EEARL=address&0x00ff; 
 00A8 CA01              movw R24,R20
 00AA 9070              andi R25,0
 00AC 8EBB              out 0x1e,R24
 00AE                   .dbline 69
 00AE           ;                 EEDR=data;
 00AE ADBA              out 0x1d,R10
 00B0                   .dbline 70
 00B0           ;                 EECR=EECR|0x04;
 00B0 E29A              sbi 0x1c,2
 00B2                   .dbline 71
 00B2           ;                 EECR=EECR|0x02;
 00B2 E19A              sbi 0x1c,1
 00B4                   .dbline 72
 00B4           ;                 delayms(32);
 00B4 00E2              ldi R16,32
 00B6 A4DF              xcall _delayms
 00B8                   .dbline -2
 00B8           L18:
 00B8                   .dbline 0 ; func end
 00B8 0C940000          xjmp pop_xgset300C
 00BC                   .dbsym r address 20 i
 00BC                   .dbsym r data 10 c
 00BC                   .dbend
 00BC                   .dbfunc e main _main fV
 00BC           ;              i -> R20
                        .even
 00BC           _main::
 00BC                   .dbline -1
 00BC                   .dbline 78
 00BC           ;                }
 00BC           ; /******************************************************************************/
 00BC           ; //主函数
 00BC           ; /******************************************************************************/                       
 00BC           ;          void main (void)
 00BC           ;          { 
 00BC                   .dbline 80
 00BC           ;                  uchar i;
 00BC           ;                  DDRA|=1<<0|1<<1|1<<2|1<<3|0<<4;//设置PA0,PA1,PA2为输出,PA4为输入
 00BC 8AB3              in R24,0x1a
 00BE 8F60              ori R24,15
 00C0 8ABB              out 0x1a,R24
 00C2                   .dbline 81
 00C2           ;              PORTA=0x00;
 00C2 2224              clr R2
 00C4 2BBA              out 0x1b,R2
 00C6                   .dbline 83
 00C6           ;       
 00C6           ;                  DDRB=0XFF;   //数码管段码输出口
 00C6 8FEF              ldi R24,255
 00C8 87BB              out 0x17,R24
 00CA                   .dbline 84
 00CA           ;                  PORTB=0xFF;
 00CA 88BB              out 0x18,R24
 00CC                   .dbline 86
 00CC           ;                  
 00CC           ;                          i=Read_EEprom(1);//读出EEPROM存的数
 00CC 01E0              ldi R16,1
 00CE 10E0              ldi R17,0
 00D0 CADF              xcall _Read_EEprom
 00D2 402F              mov R20,R16
 00D4                   .dbline 87
 00D4           ;                          i++;             //在原来基础上加1，每次开机数码管加1
 00D4 4395              inc R20
 00D6                   .dbline 88
 00D6           ;                          if(i>=255)i=0;
 00D6 4F3F              cpi R20,255
 00D8 08F0              brlo L22
 00DA           X5:
 00DA                   .dbline 88
 00DA 4427              clr R20
 00DC           L22:
 00DC                   .dbline 89
 00DC           ;                          Write_EEprom(i,1);
 00DC 21E0              ldi R18,1
 00DE 30E0              ldi R19,0
 00E0 042F              mov R16,R20
 00E2 D6DF              xcall _Write_EEprom
 00E4                   .dbline 90
 00E4           ;                          disbuf[1]=i/100;
 00E4 14E6              ldi R17,100
 00E6 042F              mov R16,R20
 00E8 0E940000          xcall div8u
 00EC 00930100          sts _disbuf+1,R16
 00F0                   .dbline 91
 00F0           ;                          disbuf[2]=i%100/10;
 00F0 14E6              ldi R17,100
 00F2 042F              mov R16,R20
 00F4 0E940000          xcall mod8u
 00F8 1AE0              ldi R17,10
 00FA 0E940000          xcall div8u
 00FE 00930200          sts _disbuf+2,R16
 0102                   .dbline 92
 0102           ;                          disbuf[3]=i%100%10;
 0102 14E6              ldi R17,100
 0104 042F              mov R16,R20
 0106 0E940000          xcall mod8u
 010A 1AE0              ldi R17,10
 010C 0E940000          xcall mod8u
 0110 00930300          sts _disbuf+3,R16
 0114                   .dbline 93
 0114           ;                          disbuf[0]=10;
 0114 8AE0              ldi R24,10
 0116 80930000          sts _disbuf,R24
 011A 2AC0              xjmp L28
 011C           L27:
 011C                   .dbline 95
 011C           ;                   while(1)
 011C           ;                  {  
 011C                   .dbline 98
 011C           ;                                
 011C           ;                                
 011C           ;                                     if(Get_Bit(PINA,4)==0)   //按键加一，并写入EEPROM ,断电重启后，数码管一直显示0123
 011C CC99              sbic 0x19,4
 011E 27C0              rjmp L30
 0120           X6:
 0120                   .dbline 99
 0120           ;                                       {
 0120 01C0              xjmp L33
 0122           L32:
 0122                   .dbline 100
 0122           ;                                           while(!Get_Bit(PINA,4))Display();   
 0122 7FDF              xcall _Display
 0124           L33:
 0124                   .dbline 100
 0124 CC9B              sbis 0x19,4
 0126 FDCF              rjmp L32
 0128           X7:
 0128                   .dbline 101
 0128           ;                                  { 
 0128                   .dbline 102
 0128           ;                                            i++;
 0128 4395              inc R20
 012A                   .dbline 103
 012A           ;                                                if(i>=255)i=0;
 012A 4F3F              cpi R20,255
 012C 08F0              brlo L35
 012E           X8:
 012E                   .dbline 103
 012E 4427              clr R20
 0130           L35:
 0130                   .dbline 104
 0130           ;                                                Write_EEprom(i,1);
 0130 21E0              ldi R18,1
 0132 30E0              ldi R19,0
 0134 042F              mov R16,R20
 0136 ACDF              xcall _Write_EEprom
 0138                   .dbline 105
 0138           ;                                                disbuf[1]=i/100;
 0138 14E6              ldi R17,100
 013A 042F              mov R16,R20
 013C 0E940000          xcall div8u
 0140 00930100          sts _disbuf+1,R16
 0144                   .dbline 106
 0144           ;                                                disbuf[2]=i%100/10;
 0144 14E6              ldi R17,100
 0146 042F              mov R16,R20
 0148 0E940000          xcall mod8u
 014C 1AE0              ldi R17,10
 014E 0E940000          xcall div8u
 0152 00930200          sts _disbuf+2,R16
 0156                   .dbline 107
 0156           ;                                                disbuf[3]=i%100%10;
 0156 14E6              ldi R17,100
 0158 042F              mov R16,R20
 015A 0E940000          xcall mod8u
 015E 1AE0              ldi R17,10
 0160 0E940000          xcall mod8u
 0164 00930300          sts _disbuf+3,R16
 0168                   .dbline 108
 0168           ;                                                disbuf[0]=10;
 0168 8AE0              ldi R24,10
 016A 80930000          sts _disbuf,R24
 016E                   .dbline 109
 016E           ;                                      }
 016E                   .dbline 110
 016E           ;                                        }
 016E           L30:
 016E                   .dbline 111
 016E           ;                                       Display();    
 016E 59DF              xcall _Display
 0170                   .dbline 112
 0170           ;                            }
 0170           L28:
 0170                   .dbline 94
 0170 D5CF              xjmp L27
 0172           X9:
 0172                   .dbline -2
 0172           L21:
 0172                   .dbline 0 ; func end
 0172 0895              ret
 0174                   .dbsym r i 20 c
 0174                   .dbend
 0174           ;                        }
 0174           ; 
 0174           ;                                               
 0174           ;                                      
 0174           ;                        
 0174           ;                             
 0174           ;                
 0174           ;                 
 0174           ; 
 0174           ; 
 0174           ;    
 0174           ;                       
 0174           ;                        
 0174           ;                             
 0174           ;                
 0174           ;                 
 0174           ; 
 0174           ; 
