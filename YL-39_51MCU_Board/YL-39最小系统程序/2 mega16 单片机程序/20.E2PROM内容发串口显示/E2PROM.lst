__text_start:
__start:
      2A E5CF      LDI	R28,0x5F
      2B E0D4      LDI	R29,4
      2C BFCD      OUT	0x3D,R28
      2D BFDE      OUT	0x3E,R29
      2E 51C0      SUBI	R28,0x10
      2F 40D0      SBCI	R29,0
      30 EA0A      LDI	R16,0xAA
      31 8308      STD	Y+0,R16
      32 2400      CLR	R0
      33 E6E0      LDI	R30,0x60
      34 E0F0      LDI	R31,0
      35 E010      LDI	R17,0
      36 36E0      CPI	R30,0x60
      37 07F1      CPC	R31,R17
      38 F011      BEQ	0x003B
      39 9201      ST	R0,Z+
      3A CFFB      RJMP	0x0036
      3B 8300      STD	Z+0,R16
      3C E5E4      LDI	R30,0x54
      3D E0F0      LDI	R31,0
      3E E6A0      LDI	R26,0x60
      3F E0B0      LDI	R27,0
      40 E010      LDI	R17,0
      41 E000      LDI	R16,0
      42 BF0B      OUT	0x3B,R16
      43 35E4      CPI	R30,0x54
      44 07F1      CPC	R31,R17
      45 F021      BEQ	0x004A
      46 95C8      LPM
      47 9631      ADIW	R30,1
      48 920D      ST	R0,X+
      49 CFF9      RJMP	0x0043
      4A 940E 005E CALL	_main
_exit:
      4C CFFF      RJMP	_exit
FILE: D:\工作\制版成功\YL-60A~2\YL-60A~2\4.相关例程\20.E2PROM内容发串口显示\E2PROM.C
(0001) /******************************************************************************/
(0002) 
(0003) /*【编写时间】： 2011.07.07
(0004) * 【作    者】： 雁翎电子
(0005) * 【版    本】： V1.0
(0006) * 【网    站】： http://ylelectronic.taobao.com/ 
(0007) * 【Q      Q】： 348439350
(0008) * 【编译环境】： ICCAVR  
(0009) * 【函数功能】： 把EEPROM 512个字节读到PC串口调试助手显示 
(0010) * 【晶    振】:  8M		
(0011) * 【芯    片】:  ATMEGA16A	 
(0012) * 【硬件连接】：    
(0013) /******************************************************************************/
(0014) #include <iom16v.h>
(0015) //#include <stdio.h>   
(0016) #include <eeprom.h>  
(0017) #define fosc 8000000 //晶振8MHZ
(0018) #define baud 19200	 //波特率
(0019) #define Set_Bit(val, bitn)    (val |=(1<<(bitn))) 
(0020) #define Clr_Bit(val, bitn)    (val&=~(1<<(bitn))) 
(0021) #define Get_Bit(val, bitn)    (val &(1<<(bitn)) ) 
(0022) #define Cpl_Bit(val, bitn)    (val^=(1<<(bitn)) )
(0023) 
(0024) void putchar(unsigned char c)
(0025) 	{	 
(0026)      while (!(UCSRA&(1<<UDRE)));
_putchar:
  c                    --> R16
      4D 9B5D      SBIS	0x0B,5
      4E CFFE      RJMP	_putchar
(0027) 	 UDR=c;    
      4F B90C      OUT	0x0C,R16
      50 9508      RET
(0028) 	}
(0029) /*  		字符输入函数 		 */	
(0030) unsigned char getchar(void)
(0031)   	{
(0032) 	 while(!(UCSRA& (1<<RXC)));
_getchar:
      51 9B5F      SBIS	0x0B,7
      52 CFFE      RJMP	_getchar
(0033)      return UDR;
      53 B10C      IN	R16,0x0C
      54 9508      RET
(0034) 	}
(0035) 
(0036) /*			UART初始化				*/	
(0037) void uart_init(void)
(0038) {
(0039)  UCSRB=(1<<RXEN)|(1<<TXEN);//允许发送和接收
_uart_init:
      55 E188      LDI	R24,0x18
      56 B98A      OUT	0x0A,R24
(0040)  UBRRL=(fosc/16/(baud+1))%256;
      57 E18A      LDI	R24,0x1A
      58 B989      OUT	0x09,R24
(0041)  UBRRH=(fosc/16/(baud+1))/256;
      59 2422      CLR	R2
      5A BC20      OUT	0x20,R2
(0042)  UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);//8位数据+1位STOP位
      5B E886      LDI	R24,0x86
      5C BD80      OUT	0x20,R24
      5D 9508      RET
(0043) }
(0044) /*			RS232通信main函数		*/
(0045) 
(0046) 
(0047) void main(void)
(0048) {
(0049)  unsigned char i;
(0050)  unsigned int  j;
(0051) 
(0052)  uart_init();
_main:
  i                    --> R10
  j                    --> R20
      5E DFF6      RCALL	_uart_init
(0053)  
(0054)  for(j=0;j<512;j++)
      5F 2744      CLR	R20
      60 2755      CLR	R21
      61 C007      RJMP	0x0069
(0055)    {
(0056)    putchar(EEPROMread(i));
      62 2D0A      MOV	R16,R10
      63 2711      CLR	R17
      64 940E 0081 CALL	_EEPROMread
      66 DFE6      RCALL	_putchar
      67 5F4F      SUBI	R20,0xFF
      68 4F5F      SBCI	R21,0xFF
      69 3040      CPI	R20,0
      6A E0E2      LDI	R30,2
      6B 075E      CPC	R21,R30
      6C F3A8      BCS	0x0062
      6D C011      RJMP	0x007F
(0057)    }
(0058)  while(1)
(0059)     {
(0060) 	 i=getchar();
      6E DFE2      RCALL	_getchar
      6F 2EA0      MOV	R10,R16
(0061) 	 if (i!=0)//按PC键盘开始测试
      70 2300      TST	R16
      71 F069      BEQ	0x007F
(0062) 	   {
(0063) 	    
(0064) 		for(j=0;j<512;j++)
      72 2744      CLR	R20
      73 2755      CLR	R21
      74 C006      RJMP	0x007B
(0065) 		  {
(0066) 		  EEPROMwrite(j,i);
FILE: <library>
      75 2D2A      MOV	R18,R10
      76 018A      MOVW	R16,R20
      77 940E 0088 CALL	_EEPROMwrite
      79 5F4F      SUBI	R20,0xFF
      7A 4F5F      SBCI	R21,0xFF
      7B 3040      CPI	R20,0
      7C E0E2      LDI	R30,2
      7D 075E      CPC	R21,R30
      7E F3B0      BCS	0x0075
      7F CFEE      RJMP	0x006E
      80 9508      RET
_EEPROMread:
      81 99E1      SBIC	0x1C,1
      82 CFFE      RJMP	_EEPROMread
      83 BB1F      OUT	0x1F,R17
      84 BB0E      OUT	0x1E,R16
      85 9AE0      SBI	0x1C,0
      86 B30D      IN	R16,0x1D
      87 9508      RET
_EEPROMwrite:
      88 92AA      ST	R10,-Y
      89 99E1      SBIC	0x1C,1
      8A CFFE      RJMP	0x0089
      8B BB1F      OUT	0x1F,R17
      8C BB0E      OUT	0x1E,R16
      8D BB2D      OUT	0x1D,R18
      8E B6AF      IN	R10,0x3F
      8F 94F8      BCLR	7
      90 9AE2      SBI	0x1C,2
      91 9AE1      SBI	0x1C,1
      92 BEAF      OUT	0x3F,R10
      93 2700      CLR	R16
      94 2711      CLR	R17
      95 90A9      LD	R10,Y+
      96 9508      RET
